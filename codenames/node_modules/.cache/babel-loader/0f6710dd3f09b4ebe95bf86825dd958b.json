{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/micha/Codenames/codenames/codenames/src/Components/GamePage/Operatives/OperativesGame.js\";\nimport React, { Component } from 'react';\nimport Row from \"../Row/Row\";\nimport './OperativesGame.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass OperativesGame extends Component {\n  // Still not 100% sure whether to change this to a class, or to just useState\n  constructor() {\n    super();\n\n    this.componentDidMount = () => {};\n\n    this.componentDidUpdate = event => {\n      if (event.gameWords !== this.props.gameWords) {\n        this.setState(prevState => {\n          return {\n            gameWords: this.props.gameWords,\n            room_key: this.props.room_key,\n            gameid: this.props.gameid\n          };\n        });\n      }\n\n      if (event.playersdata !== this.props.playersdata) {\n        this.setState(prevState => {\n          return {\n            playersdata: this.props.playersdata\n          };\n        });\n      }\n    };\n\n    this.componentWillReceiveProps = players => {\n      this.setState({\n        playersdata: players.playersdata //renderPlayers: true,\n\n      }); //console.log(players)\n\n      console.log(\"Checking how many times this will call the update players!\");\n      this.updatePlayers(players.playersdata);\n    };\n\n    this.updatePlayers = players => {\n      //console.log('Update Players Called!');\n      let room_key = this.props.room_key; //let players = this.props.playersdata;\n\n      console.log(\"Players data: \", players); //if(this.state.renderPlayers === true){\n\n      for (let i = 0; i < players.length; i++) {\n        //console.log(\"Current Player: \", players[i])\n        if (players[i].room === room_key) {\n          if (players[i].role === \"S\") {\n            if (players[i].team === \"R\") {\n              //console.log(\"It went here [Red Spy]: \", players[i])\n              let redSpymasters = this.state.redSpymasters;\n              redSpymasters.push(players[i]);\n              this.setState({\n                redSpymasters\n              });\n            } else if (players[i].team === \"B\") {\n              //console.log(\"It went here [Blue Spy]: \", players[i])\n              let blueSpymasters = this.state.blueSpymasters;\n              blueSpymasters.push(players[i]);\n              this.setState({\n                blueSpymasters\n              });\n            }\n          } else if (players[i].role === \"O\") {\n            if (players[i].team === \"R\") {\n              //console.log(\"It went here [Red Op]: \", players[i])\n              let redOperatives = this.state.redOperatives;\n              redOperatives.push(players[i]);\n              this.setState({\n                redOperatives\n              });\n            } else if (players[i].team === \"B\") {\n              //console.log(\"It went here [Blue Op]: \", players[i])\n              let blueOperatives = this.state.blueOperatives;\n              blueOperatives.push(players[i]);\n              this.setState({\n                blueOperatives\n              });\n            }\n          }\n        }\n      } //}\n\n\n      this.deleteRepeated();\n    };\n\n    this.deleteRepeated = () => {\n      let redOperatives = this.state.redOperatives;\n      let redSpymasters = this.state.redSpymasters;\n      let blueOperatives = this.state.blueOperatives;\n      let blueSpymasters = this.state.blueSpymasters;\n      let showredOperatives = this.state.showredOperatives;\n      let showredSpymasters = this.state.showredSpymasters;\n      let showblueOperatives = this.state.showblueOperatives;\n      let showblueSpymasters = this.state.showblueSpymasters; //Red Operatives\n\n      for (let i = 0; i < redOperatives.length; i++) {\n        let repeated = false;\n\n        for (let j = 0; j < showredOperatives.length; j++) {\n          if (redOperatives[i].player_id === showredOperatives[j].player_id) {\n            repeated = true;\n          }\n        }\n\n        if (repeated === false) {\n          showredOperatives.push(redOperatives[i]);\n          this.setState({\n            showredOperatives\n          });\n        }\n      } //end of for loop\n      //Red Spymasters\n\n\n      for (let i = 0; i < redSpymasters.length; i++) {\n        let repeated = false;\n\n        for (let j = 0; j < showredSpymasters.length; j++) {\n          if (redSpymasters[i].player_id === showredSpymasters[j].player_id) {\n            repeated = true;\n          }\n        }\n\n        if (repeated === false) {\n          showredSpymasters.push(redSpymasters[i]);\n          this.setState({\n            showredSpymasters\n          });\n        }\n      } //Blue Operative\n\n\n      for (let i = 0; i < blueOperatives.length; i++) {\n        let repeated = false;\n\n        for (let j = 0; j < showblueOperatives.length; j++) {\n          if (redOperatives[i].player_id === showblueOperatives[j].player_id) {\n            repeated = true;\n          }\n        }\n\n        if (repeated === false) {\n          showblueOperatives.push(blueOperatives[i]);\n          this.setState({\n            showblueOperatives\n          });\n        }\n      } //Blue Spymasters\n\n\n      for (let i = 0; i < blueSpymasters.length; i++) {\n        let repeated = false;\n\n        for (let j = 0; j < showblueSpymasters.length; j++) {\n          if (blueSpymasters[i].player_id === showblueSpymasters[j].player_id) {\n            repeated = true;\n          }\n        }\n\n        if (repeated === false) {\n          showblueSpymasters.push(blueSpymasters[i]);\n          this.setState({\n            showblueSpymasters\n          });\n        }\n      }\n    };\n\n    this.handleEndTurn = () => {\n      this.setState = {\n        turn: !this.state.turn\n      };\n      console.log(this.state.turn ? \"Blue turn\" : \"Red turn\");\n    };\n\n    this.incrementClueCount = () => {\n      this.setState(prevState => {\n        // Update with inline function\n        return {\n          spymasterClueCount: prevState.spymasterClueCount + 1\n        };\n      });\n    };\n\n    this.decrementClueCount = () => {\n      this.setState(prevState => {\n        return {\n          spymasterClueCount: prevState.spymasterClueCount - 1\n        };\n      });\n    };\n\n    this.state = {\n      room_key: '',\n      task: 'O',\n      gameWords: '',\n      redScore: 0,\n      blueScore: 0,\n      turn: true,\n      // true = blue turn & false = red turn \n      redteamid: '',\n      blueteamid: '',\n      //Helper Variables\n      redOperatives: [],\n      redSpymasters: [],\n      blueOperatives: [],\n      blueSpymasters: [],\n      renderPlayers: false,\n      //Show Variables\n      showredOperatives: [],\n      showredSpymasters: [],\n      showblueOperatives: [],\n      showblueSpymasters: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: \"OPERATORS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"gameCode\",\n        children: [\" Game Code: \", this.props.room_key, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-12\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-md-4\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"gameScores\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"redTeam\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                        className: \"teamTitle\",\n                        children: \"Red Team\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 253,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                        className: \"teamScore\",\n                        children: this.props.redPoints\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 254,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 252,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 256,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 257,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                      className: \"teamContent\",\n                      children: \" Spymasters:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 258,\n                      columnNumber: 45\n                    }, this), this.state.showredSpymasters.map((player, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                      className: \"bulletContent\",\n                      children: player.operative_screen_name\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 260,\n                      columnNumber: 49\n                    }, this)), this.showRedSpymasters, /*#__PURE__*/_jsxDEV(\"h6\", {\n                      className: \"teamContent\",\n                      children: \" Operatives:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 264,\n                      columnNumber: 45\n                    }, this), this.state.showredOperatives.map((player, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                      className: \"bulletContent\",\n                      children: player.operative_screen_name\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 266,\n                      columnNumber: 49\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 251,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 269,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"blueTeam\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                        className: \"teamTitle\",\n                        children: \"Blue Team\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 272,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                        className: \"teamScore\",\n                        children: this.props.bluePoints\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 273,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 271,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 275,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 276,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                      className: \"teamContent\",\n                      children: \" Spymasters:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 277,\n                      columnNumber: 45\n                    }, this), this.state.showblueSpymasters.map((player, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                      className: \"bulletContent\",\n                      children: player.operative_screen_name\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 279,\n                      columnNumber: 49\n                    }, this)), /*#__PURE__*/_jsxDEV(\"h6\", {\n                      className: \"teamContent\",\n                      children: \" Operatives:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 281,\n                      columnNumber: 45\n                    }, this), this.state.showblueOperatives.map((player, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                      className: \"bulletContent\",\n                      children: player.operative_screen_name\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 283,\n                      columnNumber: 49\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 270,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                className: \"col-md-7\",\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-12\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"clueBody\",\n                      children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                        className: \"clue\",\n                        children: \"Clue: 1 Card(s) CURRENCY\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 292,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 291,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 290,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  task: this.state.task,\n                  rowWords: [this.state.gameWords[0], this.state.gameWords[1], this.state.gameWords[2], this.state.gameWords[3], this.state.gameWords[4]],\n                  increaseTeamPoints: this.props.increaseTeamPoints\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  task: this.state.task,\n                  rowWords: [this.state.gameWords[5], this.state.gameWords[6], this.state.gameWords[7], this.state.gameWords[8], this.state.gameWords[9]],\n                  increaseTeamPoints: this.props.increaseTeamPoints\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  task: this.state.task,\n                  rowWords: [this.state.gameWords[10], this.state.gameWords[11], this.state.gameWords[12], this.state.gameWords[13], this.state.gameWords[14]],\n                  increaseTeamPoints: this.props.increaseTeamPoints\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  task: this.state.task,\n                  rowWords: [this.state.gameWords[15], this.state.gameWords[16], this.state.gameWords[17], this.state.gameWords[18], this.state.gameWords[19]],\n                  increaseTeamPoints: this.props.increaseTeamPoints\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  task: this.state.task,\n                  rowWords: [this.state.gameWords[20], this.state.gameWords[21], this.state.gameWords[22], this.state.gameWords[23], this.state.gameWords[24]],\n                  increaseTeamPoints: this.props.increaseTeamPoints\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 324,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-12\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"d-flex justify-content-end\",\n                      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"btn\",\n                        onChange: this.handleEndTurn,\n                        children: \"End Turn\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 335,\n                        columnNumber: 49\n                      }, this), \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 334,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 333,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 33\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default OperativesGame;","map":{"version":3,"sources":["/mnt/c/Users/micha/Codenames/codenames/codenames/src/Components/GamePage/Operatives/OperativesGame.js"],"names":["React","Component","Row","OperativesGame","constructor","componentDidMount","componentDidUpdate","event","gameWords","props","setState","prevState","room_key","gameid","playersdata","componentWillReceiveProps","players","console","log","updatePlayers","i","length","room","role","team","redSpymasters","state","push","blueSpymasters","redOperatives","blueOperatives","deleteRepeated","showredOperatives","showredSpymasters","showblueOperatives","showblueSpymasters","repeated","j","player_id","handleEndTurn","turn","incrementClueCount","spymasterClueCount","decrementClueCount","task","redScore","blueScore","redteamid","blueteamid","renderPlayers","render","redPoints","map","player","index","operative_screen_name","showRedSpymasters","bluePoints","increaseTeamPoints"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport Row from \"../Row/Row\"\r\nimport './OperativesGame.css'\r\n\r\nclass OperativesGame extends Component { // Still not 100% sure whether to change this to a class, or to just useState\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            room_key: '',\r\n            task: 'O',\r\n            gameWords: '',\r\n            redScore: 0,\r\n            blueScore: 0,\r\n            turn: true, // true = blue turn & false = red turn \r\n\r\n            redteamid: '',\r\n            blueteamid: '',\r\n\r\n            //Helper Variables\r\n            redOperatives: [],\r\n            redSpymasters: [],\r\n            blueOperatives: [],\r\n            blueSpymasters: [],\r\n            renderPlayers: false,\r\n\r\n            //Show Variables\r\n            showredOperatives: [],\r\n            showredSpymasters: [],\r\n            showblueOperatives: [],\r\n            showblueSpymasters: [],\r\n\r\n        }\r\n    }\r\n    componentDidMount = () => {\r\n\r\n    }\r\n\r\n    componentDidUpdate = (event) => {\r\n\r\n        if (event.gameWords !== this.props.gameWords) {\r\n            this.setState(prevState => {\r\n                return {\r\n                    gameWords: this.props.gameWords,\r\n                    room_key: this.props.room_key,\r\n                    gameid: this.props.gameid\r\n                }\r\n            })\r\n        }\r\n\r\n        if (event.playersdata !== this.props.playersdata) {\r\n            this.setState(prevState => {\r\n                return {\r\n                    playersdata: this.props.playersdata\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    /*This one will call updatePlayers twice therefore adds it twice but will show normal when refreshed. \r\n        =>Fixed with the deleteRepeated() function    \r\n    */\r\n    componentWillReceiveProps = (players) => {\r\n        this.setState({\r\n            playersdata: players.playersdata,\r\n            //renderPlayers: true,\r\n        })\r\n        //console.log(players)\r\n\r\n        console.log(\"Checking how many times this will call the update players!\")\r\n        this.updatePlayers(players.playersdata)\r\n    }\r\n\r\n    /*Issues: Being called twice so it adds double the amount until you refresh the page.\r\n        =>Fixed with the deleteRepeated() function    \r\n    */\r\n    updatePlayers = (players) => {\r\n        //console.log('Update Players Called!');\r\n        let room_key = this.props.room_key;\r\n        //let players = this.props.playersdata;\r\n        console.log(\"Players data: \", players)\r\n        //if(this.state.renderPlayers === true){\r\n\r\n        for (let i = 0; i < players.length; i++) {\r\n            //console.log(\"Current Player: \", players[i])\r\n            if (players[i].room === room_key) {\r\n                if (players[i].role === \"S\") {\r\n                    if (players[i].team === \"R\") {\r\n                        //console.log(\"It went here [Red Spy]: \", players[i])\r\n                        let redSpymasters = this.state.redSpymasters\r\n                        redSpymasters.push(players[i])\r\n                        this.setState({\r\n                            redSpymasters,\r\n                        })\r\n\r\n                    }\r\n                    else if (players[i].team === \"B\") {\r\n                        //console.log(\"It went here [Blue Spy]: \", players[i])\r\n                        let blueSpymasters = this.state.blueSpymasters\r\n                        blueSpymasters.push(players[i])\r\n                        this.setState({\r\n                            blueSpymasters\r\n                        })\r\n\r\n                    }\r\n                }\r\n                else if (players[i].role === \"O\") {\r\n                    if (players[i].team === \"R\") {\r\n                        //console.log(\"It went here [Red Op]: \", players[i])\r\n                        let redOperatives = this.state.redOperatives\r\n                        redOperatives.push(players[i])\r\n                        this.setState({\r\n                            redOperatives\r\n                        })\r\n\r\n                    }\r\n                    else if (players[i].team === \"B\") {\r\n                        //console.log(\"It went here [Blue Op]: \", players[i])\r\n                        let blueOperatives = this.state.blueOperatives\r\n                        blueOperatives.push(players[i])\r\n                        this.setState({\r\n                            blueOperatives\r\n                        })\r\n\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n        }\r\n        //}\r\n\r\n        this.deleteRepeated()\r\n    }\r\n\r\n    //This fixes the issue of having repeated players on intial load. \r\n    deleteRepeated = () => {\r\n        let redOperatives = this.state.redOperatives\r\n        let redSpymasters = this.state.redSpymasters\r\n        let blueOperatives = this.state.blueOperatives\r\n        let blueSpymasters = this.state.blueSpymasters\r\n        let showredOperatives = this.state.showredOperatives\r\n        let showredSpymasters = this.state.showredSpymasters\r\n        let showblueOperatives = this.state.showblueOperatives\r\n        let showblueSpymasters = this.state.showblueSpymasters\r\n\r\n        //Red Operatives\r\n        for (let i = 0; i < redOperatives.length; i++) {\r\n            let repeated = false;\r\n            for (let j = 0; j < showredOperatives.length; j++) {\r\n                if (redOperatives[i].player_id === showredOperatives[j].player_id) {\r\n                    repeated = true\r\n                }\r\n            }\r\n            if (repeated === false) {\r\n                showredOperatives.push(redOperatives[i])\r\n                this.setState({\r\n                    showredOperatives\r\n                })\r\n            }\r\n        }//end of for loop\r\n\r\n        //Red Spymasters\r\n        for (let i = 0; i < redSpymasters.length; i++) {\r\n            let repeated = false;\r\n            for (let j = 0; j < showredSpymasters.length; j++) {\r\n                if (redSpymasters[i].player_id === showredSpymasters[j].player_id) {\r\n                    repeated = true\r\n                }\r\n            }\r\n            if (repeated === false) {\r\n                showredSpymasters.push(redSpymasters[i])\r\n                this.setState({\r\n                    showredSpymasters\r\n                })\r\n            }\r\n        }\r\n\r\n        //Blue Operative\r\n        for (let i = 0; i < blueOperatives.length; i++) {\r\n            let repeated = false;\r\n            for (let j = 0; j < showblueOperatives.length; j++) {\r\n                if (redOperatives[i].player_id === showblueOperatives[j].player_id) {\r\n                    repeated = true\r\n                }\r\n            }\r\n            if (repeated === false) {\r\n                showblueOperatives.push(blueOperatives[i])\r\n                this.setState({\r\n                    showblueOperatives\r\n                })\r\n            }\r\n        }\r\n\r\n        //Blue Spymasters\r\n        for (let i = 0; i < blueSpymasters.length; i++) {\r\n            let repeated = false;\r\n            for (let j = 0; j < showblueSpymasters.length; j++) {\r\n                if (blueSpymasters[i].player_id === showblueSpymasters[j].player_id) {\r\n                    repeated = true\r\n                }\r\n            }\r\n            if (repeated === false) {\r\n                showblueSpymasters.push(blueSpymasters[i])\r\n                this.setState({\r\n                    showblueSpymasters\r\n                })\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    // For handling the players' submitting their guesses / word picks\r\n    handleEndTurn = () => {\r\n        this.setState = {\r\n            turn: !this.state.turn\r\n        }\r\n        console.log((this.state.turn) ? \"Blue turn\" : \"Red turn\")\r\n    }\r\n\r\n    incrementClueCount = () => {\r\n        this.setState(prevState => { // Update with inline function\r\n            return {\r\n                spymasterClueCount: prevState.spymasterClueCount + 1\r\n            }\r\n        })\r\n    }\r\n    decrementClueCount = () => {\r\n        this.setState(prevState => {\r\n            return {\r\n                spymasterClueCount: prevState.spymasterClueCount - 1\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"game\">\r\n                <br />\r\n                <h6>OPERATORS</h6>\r\n                <h6 className=\"gameCode\"> Game Code: {this.props.room_key} </h6>\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-4\">\r\n                                    <div className=\"gameScores\">\r\n                                        <div className=\"redTeam\">\r\n                                            <div>\r\n                                                <h6 className=\"teamTitle\">Red Team</h6>\r\n                                                <h6 className=\"teamScore\">{this.props.redPoints}</h6>\r\n                                            </div>\r\n                                            <br />\r\n                                            <br />\r\n                                            <h6 className=\"teamContent\"> Spymasters:</h6>\r\n                                            {this.state.showredSpymasters.map((player, index) => (\r\n                                                <li className=\"bulletContent\" key={index}>{player.operative_screen_name}</li>\r\n                                            ))}\r\n                                            {this.showRedSpymasters}\r\n\r\n                                            <h6 className=\"teamContent\"> Operatives:</h6>\r\n                                            {this.state.showredOperatives.map((player, index) => (\r\n                                                <li className=\"bulletContent\" key={index}>{player.operative_screen_name}</li>\r\n                                            ))}\r\n                                        </div>\r\n                                        <br />\r\n                                        <div className=\"blueTeam\">\r\n                                            <div>\r\n                                                <h6 className=\"teamTitle\">Blue Team</h6>\r\n                                                <h6 className=\"teamScore\">{this.props.bluePoints}</h6>\r\n                                            </div>\r\n                                            <br />\r\n                                            <br />\r\n                                            <h6 className=\"teamContent\"> Spymasters:</h6>\r\n                                            {this.state.showblueSpymasters.map((player, index) => (\r\n                                                <li className=\"bulletContent\" key={index}>{player.operative_screen_name}</li>\r\n                                            ))}\r\n                                            <h6 className=\"teamContent\"> Operatives:</h6>\r\n                                            {this.state.showblueOperatives.map((player, index) => (\r\n                                                <li className=\"bulletContent\" key={index}>{player.operative_screen_name}</li>\r\n                                            ))}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <form className=\"col-md-7\"> {/* Incorporate a form here so that all checkboxes can be submitted? */}\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"clueBody\">\r\n                                                <h5 className=\"clue\">Clue: 1 Card(s) CURRENCY</h5>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <Row task={this.state.task}\r\n                                        rowWords={[this.state.gameWords[0],\r\n                                        this.state.gameWords[1],\r\n                                        this.state.gameWords[2],\r\n                                        this.state.gameWords[3],\r\n                                        this.state.gameWords[4]]}\r\n                                        increaseTeamPoints={this.props.increaseTeamPoints} />\r\n                                    <Row task={this.state.task}\r\n                                        rowWords={[this.state.gameWords[5],\r\n                                        this.state.gameWords[6],\r\n                                        this.state.gameWords[7],\r\n                                        this.state.gameWords[8],\r\n                                        this.state.gameWords[9]]}\r\n                                        increaseTeamPoints={this.props.increaseTeamPoints} />\r\n                                    <Row task={this.state.task}\r\n                                        rowWords={[this.state.gameWords[10],\r\n                                        this.state.gameWords[11],\r\n                                        this.state.gameWords[12],\r\n                                        this.state.gameWords[13],\r\n                                        this.state.gameWords[14]]}\r\n                                        increaseTeamPoints={this.props.increaseTeamPoints} />\r\n                                    <Row task={this.state.task}\r\n                                        rowWords={[this.state.gameWords[15],\r\n                                        this.state.gameWords[16],\r\n                                        this.state.gameWords[17],\r\n                                        this.state.gameWords[18],\r\n                                        this.state.gameWords[19]]}\r\n                                        increaseTeamPoints={this.props.increaseTeamPoints} />\r\n                                    <Row task={this.state.task}\r\n                                        rowWords={[this.state.gameWords[20],\r\n                                        this.state.gameWords[21],\r\n                                        this.state.gameWords[22],\r\n                                        this.state.gameWords[23],\r\n                                        this.state.gameWords[24]]}\r\n                                        increaseTeamPoints={this.props.increaseTeamPoints} />\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"d-flex justify-content-end\">\r\n                                                <button className=\"btn\" onChange={this.handleEndTurn}>End Turn</button> {/*  onSubmit / onClick ? */}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </form> {/* Changed from div to form */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default OperativesGame"]},"metadata":{},"sourceType":"module"}