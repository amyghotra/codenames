{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/micha/Codenames/codenames/codenames/src/Components/GamePage/Game.js\";\nimport React, { Component } from 'react';\nimport './Game.css';\nimport axios from 'axios';\nimport SpymastersGame from './Spymasters/SpymastersGame.js';\nimport OperativesGame from './Operatives/OperativesGame.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Game extends Component {\n  constructor() {\n    super();\n\n    this.componentDidMount = () => {\n      let gameWords = this.props.location.state.gameWords;\n      console.log(gameWords);\n\n      for (let i = 0; i < gameWords.length; i++) {\n        if (gameWords[i].category === 'D') {\n          console.log('The Double Agent word is ' + gameWords[i].word);\n          this.setState({\n            doubleAgent: gameWords[i],\n            doubleAgentIndex: i\n          });\n        }\n      }\n\n      axios.get('http://127.0.0.1:8000/codenames/players').then(res => {\n        this.setState({\n          playersdata: res.data\n        });\n        let playerExist = false;\n\n        for (let i = 0; i < res.data.length; i++) {\n          if (res.data[i].game_id === this.props.location.state.gameid && res.data[i].room === this.props.location.state.room_key && res.data[i].user_id === this.props.location.state.playerid) {\n            console.log('do nothing ');\n            playerExist = true;\n          }\n        }\n\n        if (playerExist === false) {\n          console.log('making game room with ', this.props.location.state.playerid);\n          axios.post('http://127.0.0.1:8000/codenames/players', {\n            operative_screen_name: this.props.location.state.nickname,\n            team: this.props.location.state.team,\n            role: this.props.location.state.task,\n            room: this.props.location.state.room_key,\n            game_id: this.props.location.state.gameid,\n            user_id: this.props.location.state.playerid\n          });\n        }\n      });\n      this.setState({\n        room_key: this.props.location.state.room_key,\n        roomid: this.props.location.state.roomid,\n        nickname: this.props.location.state.nickname,\n        team: this.props.location.state.team,\n        task: this.props.location.state.task,\n        gameid: this.props.location.state.gameid,\n        gameWords: this.props.location.state.gameWords,\n        playerid: this.props.location.state.playerid\n      });\n    };\n\n    this.setDoubleAgent = () => {\n      this.setState(prevState => ({}));\n      console.log('this works'); // axios.put('http://127.0.0.1:8000/codenames/games', {\n      //     gameWords: this.state.doubleAgent\n      // })\n    };\n\n    this.state = {\n      room_key: '',\n      roomid: '',\n      nickname: '',\n      team: '',\n      playerid: '',\n      task: '',\n      red_score: 0,\n      blue_score: 0,\n      gameid: '',\n      gameWords: '',\n      playersdata: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.task === 'S' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.setDoubleAgent,\n          children: \"I WANT FIRST\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(SpymastersGame, {\n          room_key: this.state.room_key\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(OperativesGame, {\n        room_key: this.state.room_key\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/mnt/c/Users/micha/Codenames/codenames/codenames/src/Components/GamePage/Game.js"],"names":["React","Component","axios","SpymastersGame","OperativesGame","Game","constructor","componentDidMount","gameWords","props","location","state","console","log","i","length","category","word","setState","doubleAgent","doubleAgentIndex","get","then","res","playersdata","data","playerExist","game_id","gameid","room","room_key","user_id","playerid","post","operative_screen_name","nickname","team","role","task","roomid","setDoubleAgent","prevState","red_score","blue_score","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport './Game.css'\nimport axios from 'axios'\nimport SpymastersGame from './Spymasters/SpymastersGame.js'\nimport OperativesGame from './Operatives/OperativesGame.js'\n\n\nclass Game extends Component {\n    constructor() {\n        super()\n        this.state = {\n            room_key: '',\n            roomid: '',\n            nickname: '',\n            team: '',\n            playerid: '',\n            task: '',\n            red_score: 0,\n            blue_score: 0,\n            gameid: '',\n            gameWords: '',\n            playersdata: '',\n        }\n    }\n\n    componentDidMount = () => {\n        let gameWords = this.props.location.state.gameWords;\n        console.log(gameWords);\n\n        for(let i = 0; i < gameWords.length; i++) {\n            if(gameWords[i].category === 'D') {\n                console.log('The Double Agent word is ' + gameWords[i].word)\n                this.setState({\n                    doubleAgent: gameWords[i],\n                    doubleAgentIndex: i\n                })\n            }\n        }\n\n\n\n        axios.get('http://127.0.0.1:8000/codenames/players').then(res => {\n            this.setState({\n                playersdata: res.data\n            })\n            let playerExist = false;\n            for(let i = 0; i < res.data.length; i++) {\n                if(res.data[i].game_id === this.props.location.state.gameid && res.data[i].room === this.props.location.state.room_key && res.data[i].user_id === this.props.location.state.playerid) {\n                    console.log('do nothing ')\n                    playerExist = true;\n                }\n            }\n\n            if(playerExist === false) {\n                console.log('making game room with ', this.props.location.state.playerid)\n                axios.post('http://127.0.0.1:8000/codenames/players', {\n                    operative_screen_name: this.props.location.state.nickname,\n                    team: this.props.location.state.team,\n                    role: this.props.location.state.task,\n                    room: this.props.location.state.room_key,\n                    game_id: this.props.location.state.gameid,\n                    user_id: this.props.location.state.playerid\n                })\n            }\n        })\n        this.setState({\n            room_key: this.props.location.state.room_key,\n            roomid: this.props.location.state.roomid,\n            nickname: this.props.location.state.nickname,\n            team: this.props.location.state.team,\n            task: this.props.location.state.task,\n            gameid: this.props.location.state.gameid,\n            gameWords: this.props.location.state.gameWords,\n            playerid: this.props.location.state.playerid\n        })\n    }\n    \n    setDoubleAgent = () => {\n        this.setState( prevState => ({\n\n        }))\n        console.log('this works')\n        // axios.put('http://127.0.0.1:8000/codenames/games', {\n        //     gameWords: this.state.doubleAgent\n        // })\n    }\n\n    render() {\n        return(\n            <div>\n                {\n                    this.state.task === 'S' ?\n                    \n                    <div>\n                        <button onClick={this.setDoubleAgent}>I WANT FIRST</button>\n                        <SpymastersGame \n                            room_key = {this.state.room_key}\n                        />\n                    </div>\n                    : \n\n                    <OperativesGame \n                        room_key = {this.state.room_key}\n                    />\n                }\n            </div>\n        )\n    }\n}\n\nexport default Game"]},"metadata":{},"sourceType":"module"}