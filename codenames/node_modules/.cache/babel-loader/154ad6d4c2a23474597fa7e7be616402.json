{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/micha/Codenames/codenames/codenames/src/Components/GamePage/Card/Card.js\";\nimport React, { Component } from \"react\";\nimport \"./Card.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Card extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.setState({\n        task: this.props.task,\n        team: this.state.team,\n        turn: this.state.turn\n      }); // console.log(\"task : \", this.props.task)\n    };\n\n    this.componentDidUpdate = event => {\n      if (event.word !== this.props.word) {\n        let wordGuessed = localStorage.getItem(this.props.word.word_id);\n        this.setState(prevState => {\n          return {\n            content: this.props.word,\n            checked: wordGuessed\n          };\n        });\n\n        if (this.props.word.category === 'A' || this.props.word.category === 'R' || this.props.word.category === 'B') {}\n      }\n    };\n\n    this.handleChange = () => {\n      this.setState({\n        checked: true,\n        turn: !this.state.turn\n      });\n      console.log(this.state.content);\n      this.props.increaseTeamPoints(this.state.content.category, this.state.content.word_id);\n      localStorage.setItem(this.state.content.word_id, JSON.stringify(true));\n    };\n\n    this.state = {\n      checked: false,\n      task: '',\n      team: '',\n      content: '',\n      turn: true,\n      // true = blue turn && false = red turn\n      redteamid: '',\n      blueteamid: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.task === 'O' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-deck\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-style\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"checkboxStructure\",\n            type: \"checkbox\",\n            checked: this.state.checked,\n            onClick: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 54\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: !this.state.checked ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"card-text\",\n                children: this.state.content.word\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 77\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                className: `card-text-${this.state.content.category}`,\n                children: this.state.content.word\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 110\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: `card-deck-${this.state.content.category}`,\n          children: this.state.content.word\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Card;","map":{"version":3,"sources":["/mnt/c/Users/micha/Codenames/codenames/codenames/src/Components/GamePage/Card/Card.js"],"names":["React","Component","Card","constructor","props","componentDidMount","setState","task","team","state","turn","componentDidUpdate","event","word","wordGuessed","localStorage","getItem","word_id","prevState","content","checked","category","handleChange","console","log","increaseTeamPoints","setItem","JSON","stringify","redteamid","blueteamid","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Card.css\"\n\n\n\nclass Card extends Component{\n    constructor(props) {\n        super(props)\n        this.state = {\n            checked: false,\n            task: '',\n            team: '',\n            content: '',\n            turn: true, // true = blue turn && false = red turn\n\n            redteamid: '',\n            blueteamid: '',\n\n            \n        }\n    }\n    \n    componentDidMount = () => {\n        this.setState({\n            task: this.props.task,\n            team: this.state.team,\n            turn: this.state.turn\n            \n        })\n        // console.log(\"task : \", this.props.task)\n    }\n\n    componentDidUpdate = (event) => {\n        if (event.word !== this.props.word) {\n            let wordGuessed = localStorage.getItem(this.props.word.word_id);\n            this.setState(prevState => {\n                return {\n                    content: this.props.word,\n                    checked: wordGuessed\n                }\n            })\n\n            if(this.props.word.category === 'A' || this.props.word.category === 'R' || this.props.word.category === 'B') {\n            \n            }\n        }\n    }\n\n    handleChange = () => {\n        this.setState({\n            checked: true,\n            turn: !this.state.turn            \n        })\n        console.log(this.state.content)\n        this.props.increaseTeamPoints(this.state.content.category, this.state.content.word_id)\n        localStorage.setItem(this.state.content.word_id, JSON.stringify(true))\n    }\n\n    \n    \n\n    render(){\n        return(\n            <div>\n\n                {(this.state.task === 'O') ?\n                <div>\n                <div className=\"card-deck\">\n                <div className=\"card-style\"></div>    \n                <input  className = \"checkboxStructure\"\n                        type = \"checkbox\"\n\t\t\t\t\t\tchecked = {this.state.checked}\n                        onClick={this.handleChange}/><br/>\n                <div>\n                {(!this.state.checked) ?\n                <div>\n                    <h5 className=\"card-text\">{this.state.content.word}</h5><br/>\n                </div>\n                :\n                <div>\n                    <h5 className={`card-text-${this.state.content.category}`}>{this.state.content.word}</h5><br/>\n                </div>\n                }\n                </div>\n                </div>\n                </div>\n                :\n                <div>\n                    <br/>\n                    <h5 className={`card-deck-${this.state.content.category}`} >{this.state.content.word}</h5>\n                    <br/>\n                </div>\n                }\n                \n\n            </div>\n        )\n    }\n}\n\nexport default Card"]},"metadata":{},"sourceType":"module"}