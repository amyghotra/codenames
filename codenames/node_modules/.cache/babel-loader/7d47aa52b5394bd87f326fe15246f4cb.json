{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/micha/Codenames/codenames/codenames/src/Components/GamePage/Game.js\";\nimport React, { Component } from 'react';\nimport './Game.css';\nimport axios from 'axios';\nimport SpymastersGame from './Spymasters/SpymastersGame.js';\nimport OperativesGame from './Operatives/OperativesGame.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Game extends Component {\n  constructor() {\n    super();\n\n    this.componentDidMount = () => {\n      console.log(this.props.location.state.gameWords);\n      axios.get('http://127.0.0.1:8000/codenames/players').then(res => {\n        this.setState({\n          playersdata: res.data\n        });\n        let playerExist = false;\n\n        for (let i = 0; i < res.data.length; i++) {\n          if (res.data[i].game_id === this.props.location.state.gameid && res.data[i].room === this.props.location.state.room_key && res.data[i].user_id === this.props.location.state.playerid) {\n            console.log('do nothing ');\n            playerExist = true;\n          }\n        }\n\n        if (playerExist === false) {\n          console.log('making game room with ', this.props.location.state.playerid);\n          axios.post('http://127.0.0.1:8000/codenames/players', {\n            operative_screen_name: this.props.location.state.nickname,\n            team: this.props.location.state.team,\n            role: this.props.location.state.task,\n            room: this.props.location.state.room_key,\n            game_id: this.props.location.state.gameid,\n            user_id: this.props.location.state.playerid\n          });\n        }\n      });\n      this.setState({\n        room_key: this.props.location.state.room_key,\n        roomid: this.props.location.state.roomid,\n        nickname: this.props.location.state.nickname,\n        team: this.props.location.state.team,\n        task: this.props.location.state.task,\n        gameid: this.props.location.state.gameid,\n        gameWords: this.props.location.state.gameWords,\n        playerid: this.props.location.state.playerid\n      });\n    };\n\n    this.state = {\n      room_key: '',\n      roomid: '',\n      nickname: '',\n      team: '',\n      playerid: '',\n      task: '',\n      red_score: 0,\n      blue_score: 0,\n      gameid: '',\n      gameWords: '',\n      playersdata: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.task === 'S' ? /*#__PURE__*/_jsxDEV(SpymastersGame, {\n        room_key: this.state.room_key\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(OperativesGame, {\n        room_key: this.state.room_key\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/mnt/c/Users/micha/Codenames/codenames/codenames/src/Components/GamePage/Game.js"],"names":["React","Component","axios","SpymastersGame","OperativesGame","Game","constructor","componentDidMount","console","log","props","location","state","gameWords","get","then","res","setState","playersdata","data","playerExist","i","length","game_id","gameid","room","room_key","user_id","playerid","post","operative_screen_name","nickname","team","role","task","roomid","red_score","blue_score","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport './Game.css'\nimport axios from 'axios'\nimport SpymastersGame from './Spymasters/SpymastersGame.js'\nimport OperativesGame from './Operatives/OperativesGame.js'\n\n\nclass Game extends Component {\n    constructor() {\n        super()\n        this.state = {\n            room_key: '',\n            roomid: '',\n            nickname: '',\n            team: '',\n            playerid: '',\n            task: '',\n            red_score: 0,\n            blue_score: 0,\n            gameid: '',\n            gameWords: '',\n            playersdata: '',\n        }\n    }\n\n    componentDidMount = () => {\n        console.log(this.props.location.state.gameWords)\n        axios.get('http://127.0.0.1:8000/codenames/players').then(res => {\n            this.setState({\n                playersdata: res.data\n            })\n            let playerExist = false;\n            for(let i = 0; i < res.data.length; i++) {\n                if(res.data[i].game_id === this.props.location.state.gameid && res.data[i].room === this.props.location.state.room_key && res.data[i].user_id === this.props.location.state.playerid) {\n                    console.log('do nothing ')\n                    playerExist = true;\n                }\n            }\n\n            if(playerExist === false) {\n                console.log('making game room with ', this.props.location.state.playerid)\n                axios.post('http://127.0.0.1:8000/codenames/players', {\n                    operative_screen_name: this.props.location.state.nickname,\n                    team: this.props.location.state.team,\n                    role: this.props.location.state.task,\n                    room: this.props.location.state.room_key,\n                    game_id: this.props.location.state.gameid,\n                    user_id: this.props.location.state.playerid\n                })\n            }\n        })\n        this.setState({\n            room_key: this.props.location.state.room_key,\n            roomid: this.props.location.state.roomid,\n            nickname: this.props.location.state.nickname,\n            team: this.props.location.state.team,\n            task: this.props.location.state.task,\n            gameid: this.props.location.state.gameid,\n            gameWords: this.props.location.state.gameWords,\n            playerid: this.props.location.state.playerid\n        })\n    }\n    \n\n    render() {\n        return(\n            <div>\n                {\n                    this.state.task === 'S' ?\n                    \n                    <SpymastersGame \n                        room_key = {this.state.room_key}\n                    />\n\n                    : \n\n                    <OperativesGame \n                        room_key = {this.state.room_key}\n                    />\n                }\n            </div>\n        )\n    }\n}\n\nexport default Game"]},"metadata":{},"sourceType":"module"}