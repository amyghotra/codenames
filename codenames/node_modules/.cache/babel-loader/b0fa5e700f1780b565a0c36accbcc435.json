{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/micha/Codenames/codenames/codenames/src/Components/GamePage/Game.js\";\nimport React, { Component } from 'react';\nimport './Game.css';\nimport axios from 'axios';\nimport SpymastersGame from './Spymasters/SpymastersGame.js';\nimport OperativesGame from './Operatives/OperativesGame.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Game extends Component {\n  constructor() {\n    super();\n\n    this.componentDidMount = () => {\n      this.setState({\n        room_key: this.props.location.state.room_key,\n        roomid: this.props.location.state.roomid,\n        nickname: this.props.location.state.nickname,\n        team: this.props.location.state.team,\n        task: this.props.location.state.task\n      });\n\n      if (!this.props.location.state.gameid) {\n        axios.get('http://127.0.0.1:8000/codenames/games').then(res => {\n          console.log(res.data);\n          this.setState({\n            gamesData: res.data\n          });\n\n          for (let i = 0; i < res.data.length; i++) {\n            if (res.data[i].connected_room_key === this.state.roomid) {}\n          }\n        });\n      } else {\n        if (this.props.location.state.team === 'R') {\n          axios.post('http://127.0.0.1:8000/codenames/redTeam', {\n            game_id: this.state.gameid,\n            connected_room_key: this.props.location.state.room_key\n          });\n        } else if (this.props.location.state.team === 'B') {\n          axios.post('http://127.0.0.1:8000/codenames/blueTeam', {\n            game_id: this.state.gameid,\n            connected_room_key: this.props.location.state.room_key\n          });\n        }\n      }\n    };\n\n    this.state = {\n      spymaster: true,\n      room_key: '',\n      roomid: '',\n      nickname: '',\n      team: '',\n      task: '',\n      red_score: 0,\n      blue_score: 0,\n      gamesData: '',\n      gameid: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.spymaster ? /*#__PURE__*/_jsxDEV(SpymastersGame, {\n        room_key: this.state.room_key\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(OperativesGame, {\n        room_key: this.state.room_key\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/mnt/c/Users/micha/Codenames/codenames/codenames/src/Components/GamePage/Game.js"],"names":["React","Component","axios","SpymastersGame","OperativesGame","Game","constructor","componentDidMount","setState","room_key","props","location","state","roomid","nickname","team","task","gameid","get","then","res","console","log","data","gamesData","i","length","connected_room_key","post","game_id","spymaster","red_score","blue_score","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport './Game.css'\nimport axios from 'axios'\nimport SpymastersGame from './Spymasters/SpymastersGame.js'\nimport OperativesGame from './Operatives/OperativesGame.js'\n\n\nclass Game extends Component {\n    constructor() {\n        super()\n        this.state = {\n            spymaster: true,\n            room_key: '',\n            roomid: '',\n            nickname: '',\n            team: '',\n            task: '',\n            red_score: 0,\n            blue_score: 0,\n            gamesData: '',\n            gameid: ''\n        }\n    }\n\n    componentDidMount = () => {\n        this.setState({\n            room_key: this.props.location.state.room_key,\n            roomid: this.props.location.state.roomid,\n            nickname: this.props.location.state.nickname,\n            team: this.props.location.state.team,\n            task: this.props.location.state.task\n        })\n\n        if(!this.props.location.state.gameid) {\n            axios.get('http://127.0.0.1:8000/codenames/games').then(res => {\n                console.log(res.data)\n                this.setState({\n                    gamesData: res.data\n                })\n                for(let i = 0; i < res.data.length; i++) {\n                    if(res.data[i].connected_room_key === this.state.roomid) {\n                        \n                    }\n                }\n            }) \n        }\n        else {\n            if (this.props.location.state.team === 'R') {\n                axios.post('http://127.0.0.1:8000/codenames/redTeam', {\n                    game_id: this.state.gameid,\n                    connected_room_key: this.props.location.state.room_key\n                })\n            }\n            else if (this.props.location.state.team === 'B') {\n                axios.post('http://127.0.0.1:8000/codenames/blueTeam', {\n                    game_id: this.state.gameid,\n                    connected_room_key: this.props.location.state.room_key\n                })\n            }\n        }\n    }\n    \n\n    render() {\n        return(\n            <div>\n                {\n                    this.state.spymaster ?\n                    \n                    <SpymastersGame \n                        room_key = {this.state.room_key}\n                    />\n\n                    : \n\n                    <OperativesGame \n                        room_key = {this.state.room_key}\n                    />\n                }\n            </div>\n        )\n    }\n}\n\nexport default Game"]},"metadata":{},"sourceType":"module"}