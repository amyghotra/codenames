{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/micha/Codenames/codenames/codenames/src/Components/GamePage/Game.js\";\nimport React, { Component } from 'react';\nimport './Game.css';\nimport axios from 'axios';\nimport SpymastersGame from './Spymasters/SpymastersGame.js';\nimport OperativesGame from './Operatives/OperativesGame.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Game extends Component {\n  constructor() {\n    super();\n\n    this.componentDidMount = () => {\n      axios.get('http://127.0.0.1:8000/codenames/players').then(res => {\n        console.log(res.data);\n        this.setState({\n          playersdata: res.data\n        });\n        let gameRoomExist = false;\n\n        for (let i = 0; i < res.data.length; i++) {\n          if (res.data[i].game_id === this.props.location.state.gameid && res.data[i].room === this.props.location.state.room_key) {\n            console.log('do nothing ');\n            gameRoomExist = true;\n          }\n        }\n\n        if (gameRoomExist === false) {\n          console.log('game room doesnt exist');\n          axios.post('http://127.0.0.1:8000/codenames/players', {\n            operative_screen_name: this.props.location.state.nickname,\n            team: this.props.location.state.team,\n            role: this.props.location.state.task,\n            room: this.props.location.state.room_key,\n            game_id: this.props.location.state.gameid\n          });\n        }\n      });\n      this.setState({\n        room_key: this.props.location.state.room_key,\n        roomid: this.props.location.state.roomid,\n        nickname: this.props.location.state.nickname,\n        team: this.props.location.state.team,\n        task: this.props.location.state.task,\n        gameid: this.props.location.state.gameid,\n        playerid: this.props.location.state.playerid\n      });\n      console.log(this.props.location.state.gameid);\n    };\n\n    this.state = {\n      room_key: '',\n      roomid: '',\n      nickname: '',\n      team: '',\n      playerid: '',\n      task: '',\n      red_score: 0,\n      blue_score: 0,\n      gameid: '',\n      playersdata: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.task === 'S' ? /*#__PURE__*/_jsxDEV(SpymastersGame, {\n        room_key: this.state.room_key\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(OperativesGame, {\n        room_key: this.state.room_key\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/mnt/c/Users/micha/Codenames/codenames/codenames/src/Components/GamePage/Game.js"],"names":["React","Component","axios","SpymastersGame","OperativesGame","Game","constructor","componentDidMount","get","then","res","console","log","data","setState","playersdata","gameRoomExist","i","length","game_id","props","location","state","gameid","room","room_key","post","operative_screen_name","nickname","team","role","task","roomid","playerid","red_score","blue_score","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport './Game.css'\nimport axios from 'axios'\nimport SpymastersGame from './Spymasters/SpymastersGame.js'\nimport OperativesGame from './Operatives/OperativesGame.js'\n\n\nclass Game extends Component {\n    constructor() {\n        super()\n        this.state = {\n            room_key: '',\n            roomid: '',\n            nickname: '',\n            team: '',\n            playerid: '',\n            task: '',\n            red_score: 0,\n            blue_score: 0,\n            gameid: '',\n            playersdata: '',\n        }\n    }\n\n    componentDidMount = () => {\n        axios.get('http://127.0.0.1:8000/codenames/players').then(res => {\n            console.log(res.data)\n            this.setState({\n                playersdata: res.data\n            })\n            let gameRoomExist = false;\n            for(let i = 0; i < res.data.length; i++) {\n                if(res.data[i].game_id === this.props.location.state.gameid && res.data[i].room === this.props.location.state.room_key) {\n                    console.log('do nothing ')\n                    gameRoomExist = true;\n                }\n            }\n\n            if(gameRoomExist === false) {\n                console.log('game room doesnt exist')\n                axios.post('http://127.0.0.1:8000/codenames/players', {\n                    operative_screen_name: this.props.location.state.nickname,\n                    team: this.props.location.state.team,\n                    role: this.props.location.state.task,\n                    room: this.props.location.state.room_key,\n                    game_id: this.props.location.state.gameid\n                })\n            }\n        })\n        this.setState({\n            room_key: this.props.location.state.room_key,\n            roomid: this.props.location.state.roomid,\n            nickname: this.props.location.state.nickname,\n            team: this.props.location.state.team,\n            task: this.props.location.state.task,\n            gameid: this.props.location.state.gameid,\n            playerid: this.props.location.state.playerid\n\n        })\n        console.log(this.props.location.state.gameid)\n    }\n    \n\n    render() {\n        return(\n            <div>\n                {\n                    this.state.task === 'S' ?\n                    \n                    <SpymastersGame \n                        room_key = {this.state.room_key}\n                    />\n\n                    : \n\n                    <OperativesGame \n                        room_key = {this.state.room_key}\n                    />\n                }\n            </div>\n        )\n    }\n}\n\nexport default Game"]},"metadata":{},"sourceType":"module"}