{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/micha/Codenames/codenames/codenames/src/Components/GamePage/Spymasters/SpymastersGame.js\";\nimport React, { Component } from 'react';\nimport Row from \"../Row/Row\";\nimport './SpymastersGame.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SpymastersGame extends Component {\n  // Still not 100% sure whether to change this to a class, or to just useState\n  constructor() {\n    super();\n\n    this.componentDidUpdate = event => {\n      if (event.gameWords !== this.props.gameWords) {\n        this.setState(prevState => {\n          return {\n            gameWords: this.props.gameWords,\n            room_key: this.props.room_key,\n            gameid: this.props.gameid\n          };\n        });\n      }\n\n      if (event.playersdata !== this.props.playersdata) {\n        this.setState(prevState => {\n          return {\n            playersdata: this.props.playersdata\n          };\n        });\n      }\n    };\n\n    this.componentWillReceiveProps = players => {\n      this.setState({\n        playersdata: players.playersdata //renderPlayers: true,\n\n      }); //console.log(players)\n\n      console.log(\"Checking how many times this will call the update players!\");\n      this.updatePlayers(players.playersdata);\n    };\n\n    this.updatePlayers = players => {\n      //console.log('Update Players Called!');\n      let room_key = this.props.room_key; //let players = this.props.playersdata;\n\n      console.log(\"Players data: \", players); //if(this.state.renderPlayers === true){\n\n      for (let i = 0; i < players.length; i++) {\n        //console.log(\"Current Player: \", players[i])\n        if (players[i].room === room_key) {\n          if (players[i].role === \"S\") {\n            if (players[i].team === \"R\") {\n              //console.log(\"It went here [Red Spy]: \", players[i])\n              let redSpymasters = this.state.redSpymasters;\n              redSpymasters.push(players[i]);\n              this.setState({\n                redSpymasters\n              });\n            } else if (players[i].team === \"B\") {\n              //console.log(\"It went here [Blue Spy]: \", players[i])\n              let blueSpymasters = this.state.blueSpymasters;\n              blueSpymasters.push(players[i]);\n              this.setState({\n                blueSpymasters\n              });\n            }\n          } else if (players[i].role === \"O\") {\n            if (players[i].team === \"R\") {\n              //console.log(\"It went here [Red Op]: \", players[i])\n              let redOperatives = this.state.redOperatives;\n              redOperatives.push(players[i]);\n              this.setState({\n                redOperatives\n              });\n            } else if (players[i].team === \"B\") {\n              //console.log(\"It went here [Blue Op]: \", players[i])\n              let blueOperatives = this.state.blueOperatives;\n              blueOperatives.push(players[i]);\n              this.setState({\n                blueOperatives\n              });\n            }\n          }\n        }\n      } //}\n\n\n      this.deleteRepeated();\n    };\n\n    this.deleteRepeated = () => {\n      let redOperatives = this.state.redOperatives;\n      let redSpymasters = this.state.redSpymasters;\n      let blueOperatives = this.state.blueOperatives;\n      let blueSpymasters = this.state.blueSpymasters;\n      let showredOperatives = this.state.showredOperatives;\n      let showredSpymasters = this.state.showredSpymasters;\n      let showblueOperatives = this.state.showblueOperatives;\n      let showblueSpymasters = this.state.showblueSpymasters; //Red Operatives\n\n      for (let i = 0; i < redOperatives.length; i++) {\n        let repeated = false;\n\n        for (let j = 0; j < showredOperatives.length; j++) {\n          if (redOperatives[i].player_id === showredOperatives[j].player_id) {\n            repeated = true;\n          }\n        }\n\n        if (repeated === false) {\n          showredOperatives.push(redOperatives[i]);\n          this.setState({\n            showredOperatives\n          });\n        }\n      } //end of for loop\n      //Red Spymasters\n\n\n      for (let i = 0; i < redSpymasters.length; i++) {\n        let repeated = false;\n\n        for (let j = 0; j < showredSpymasters.length; j++) {\n          if (redSpymasters[i].player_id === showredSpymasters[j].player_id) {\n            repeated = true;\n          }\n        }\n\n        if (repeated === false) {\n          showredSpymasters.push(redSpymasters[i]);\n          this.setState({\n            showredSpymasters\n          });\n        }\n      } //Blue Operative\n\n\n      for (let i = 0; i < blueOperatives.length; i++) {\n        let repeated = false;\n\n        for (let j = 0; j < showblueOperatives.length; j++) {\n          if (blueOperatives[i].player_id === showblueOperatives[j].player_id) {\n            repeated = true;\n          }\n        }\n\n        if (repeated === false) {\n          showblueOperatives.push(blueOperatives[i]);\n          this.setState({\n            showblueOperatives\n          });\n        }\n      } //Blue Spymasters\n\n\n      for (let i = 0; i < blueSpymasters.length; i++) {\n        let repeated = false;\n\n        for (let j = 0; j < showblueSpymasters.length; j++) {\n          if (blueSpymasters[i].player_id === showblueSpymasters[j].player_id) {\n            repeated = true;\n          }\n        }\n\n        if (repeated === false) {\n          showblueSpymasters.push(blueSpymasters[i]);\n          this.setState({\n            showblueSpymasters\n          });\n        }\n      }\n    };\n\n    this.state = {\n      room_key: '',\n      task: 'S',\n      gameid: '',\n      gameWords: '',\n      playersdata: '',\n      spymasterClueWord: \"\",\n      spymasterClueCount: 0,\n      redScore: 0,\n      blueScore: 0,\n      redteamid: '',\n      blueteamid: '',\n      //Helper Variables\n      redOperatives: [],\n      redSpymasters: [],\n      blueOperatives: [],\n      blueSpymasters: [],\n      renderPlayers: false,\n      //Show Variables\n      showredOperatives: [],\n      showredSpymasters: [],\n      showblueOperatives: [],\n      showblueSpymasters: []\n    };\n  }\n  /*\n      states affected: \n          gameWords\n      what it does: \n          The first parameter for this method is gameWords before the update; so, testing \n          whether it has changed is done here. If it has changed then it will update the \n          gameWords to how the game component has them. \n  */\n\n\n  // For changing state when elements are changed on the page by user\n  handleChange(event) {} // For handling the players' submitting their guesses / word picks\n\n\n  handleGuessSubmit(event) {}\n\n  incrementClueCount() {\n    this.setState(prevState => {\n      // Update with inline function\n      return {\n        spymasterClueCount: prevState.spymasterClueCount + 1\n      };\n    });\n  }\n\n  decrementClueCount() {\n    this.setState(prevState => {\n      return {\n        spymasterClueCount: prevState.spymasterClueCount - 1\n      };\n    });\n  }\n  /*Issues: Being called twice so it adds double the amount until you refresh the page.\n      =>Fixed with the deleteRepeated() function    \n  */\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: \"SPYMASTERS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"gameCode\",\n        children: [\" Game Code: \", this.props.room_key, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-12\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-md-4\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"gameScores\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"redTeam\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                        className: \"teamTitle\",\n                        children: \"Red Team\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 261,\n                        columnNumber: 45\n                      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                        className: \"teamScore\",\n                        children: this.props.redPoints\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 262,\n                        columnNumber: 45\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 259,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 264,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 265,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                      className: \"teamContent\",\n                      children: \" Spymasters:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 266,\n                      columnNumber: 41\n                    }, this), this.state.showredSpymasters.map((player, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                      className: \"bulletContent\",\n                      children: player.operative_screen_name\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 268,\n                      columnNumber: 49\n                    }, this)), this.showRedSpymasters, /*#__PURE__*/_jsxDEV(\"h6\", {\n                      className: \"teamContent\",\n                      children: \" Operatives:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 272,\n                      columnNumber: 41\n                    }, this), this.state.showredOperatives.map((player, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                      className: \"bulletContent\",\n                      children: player.operative_screen_name\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 274,\n                      columnNumber: 49\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 258,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 277,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"blueTeam\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                        className: \"teamTitle\",\n                        children: \"Blue Team\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 280,\n                        columnNumber: 45\n                      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                        className: \"teamScore\",\n                        children: this.props.bluePoints\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 281,\n                        columnNumber: 45\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 279,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 283,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 284,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                      className: \"teamContent\",\n                      children: \" Spymasters:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 285,\n                      columnNumber: 41\n                    }, this), this.state.showblueSpymasters.map((player, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                      className: \"bulletContent\",\n                      children: player.operative_screen_name\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 287,\n                      columnNumber: 49\n                    }, this)), /*#__PURE__*/_jsxDEV(\"h6\", {\n                      className: \"teamContent\",\n                      children: \" Operatives:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 289,\n                      columnNumber: 41\n                    }, this), this.state.showblueOperatives.map((player, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                      className: \"bulletContent\",\n                      children: player.operative_screen_name\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 291,\n                      columnNumber: 49\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 278,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-md-7\",\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-12\",\n                    children: [/*#__PURE__*/_jsxDEV(Row, {\n                      task: this.state.task,\n                      rowWords: [this.state.gameWords[0], this.state.gameWords[1], this.state.gameWords[2], this.state.gameWords[3], this.state.gameWords[4]],\n                      increaseTeamPoints: this.props.increaseTeamPoints\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 300,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Row, {\n                      task: this.state.task,\n                      rowWords: [this.state.gameWords[5], this.state.gameWords[6], this.state.gameWords[7], this.state.gameWords[8], this.state.gameWords[9]],\n                      increaseTeamPoints: this.props.increaseTeamPoints\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 307,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Row, {\n                      task: this.state.task,\n                      rowWords: [this.state.gameWords[10], this.state.gameWords[11], this.state.gameWords[12], this.state.gameWords[13], this.state.gameWords[14]],\n                      increaseTeamPoints: this.props.increaseTeamPoints\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 314,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Row, {\n                      task: this.state.task,\n                      rowWords: [this.state.gameWords[15], this.state.gameWords[16], this.state.gameWords[17], this.state.gameWords[18], this.state.gameWords[19]],\n                      increaseTeamPoints: this.props.increaseTeamPoints\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 321,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Row, {\n                      task: this.state.task,\n                      rowWords: [this.state.gameWords[20], this.state.gameWords[21], this.state.gameWords[22], this.state.gameWords[23], this.state.gameWords[24]],\n                      increaseTeamPoints: this.props.increaseTeamPoints\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 328,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 298,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-12\",\n                    children: /*#__PURE__*/_jsxDEV(\"form\", {\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"spymasterClue\",\n                        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"text\",\n                          value: this.state.spymasterClueWord,\n                          name: \"clueWord\",\n                          placeholder: \"Type clue here\",\n                          onChange: this.handleChange\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 341,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"counter\",\n                          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                            type: \"button\",\n                            onClick: this.incrementClueCount,\n                            children: \"+\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 350,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                            children: this.state.spymasterClueCount\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 351,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                            type: \"button\",\n                            onClick: this.decrementClueCount,\n                            children: \"-\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 352,\n                            columnNumber: 57\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 348,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                          children: \"Submit Clue\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 354,\n                          columnNumber: 53\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 340,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 339,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 338,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 337,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 33\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default SpymastersGame;","map":{"version":3,"sources":["/mnt/c/Users/micha/Codenames/codenames/codenames/src/Components/GamePage/Spymasters/SpymastersGame.js"],"names":["React","Component","Row","SpymastersGame","constructor","componentDidUpdate","event","gameWords","props","setState","prevState","room_key","gameid","playersdata","componentWillReceiveProps","players","console","log","updatePlayers","i","length","room","role","team","redSpymasters","state","push","blueSpymasters","redOperatives","blueOperatives","deleteRepeated","showredOperatives","showredSpymasters","showblueOperatives","showblueSpymasters","repeated","j","player_id","task","spymasterClueWord","spymasterClueCount","redScore","blueScore","redteamid","blueteamid","renderPlayers","handleChange","handleGuessSubmit","incrementClueCount","decrementClueCount","render","redPoints","map","player","index","operative_screen_name","showRedSpymasters","bluePoints","increaseTeamPoints"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Row from \"../Row/Row\"\nimport './SpymastersGame.css'\n\n\nclass SpymastersGame extends Component{ // Still not 100% sure whether to change this to a class, or to just useState\n    constructor() {\n        super()\n        this.state = {\n            room_key: '',\n            task: 'S',\n            gameid: '',\n            gameWords: '',\n            playersdata: '',\n            spymasterClueWord: \"\",\n            spymasterClueCount: 0,\n\n            redScore: 0,\n            blueScore: 0,\n\n            redteamid: '',\n            blueteamid: '',\n\n            //Helper Variables\n            redOperatives: [],\n            redSpymasters: [],\n            blueOperatives: [],\n            blueSpymasters: [],\n            renderPlayers: false,\n\n            //Show Variables\n            showredOperatives: [],\n            showredSpymasters: [],\n            showblueOperatives: [],\n            showblueSpymasters: [],\n        }\n\n    }\n    /*\n        states affected: \n            gameWords\n        what it does: \n            The first parameter for this method is gameWords before the update; so, testing \n            whether it has changed is done here. If it has changed then it will update the \n            gameWords to how the game component has them. \n    */\n    componentDidUpdate = (event) => {\n\n        if (event.gameWords !== this.props.gameWords) {\n            this.setState(prevState => {\n                return {\n                    gameWords: this.props.gameWords,\n                    room_key: this.props.room_key,\n                    gameid: this.props.gameid\n                }\n            })\n        }\n\n        if(event.playersdata !== this.props.playersdata){\n            this.setState(prevState =>{\n                return{\n                    playersdata: this.props.playersdata\n                }\n            })\n        }\n    }\n\n    /*This one will call updatePlayers twice therefore adds it twice but will show normal when refreshed. \n        =>Fixed with the deleteRepeated() function    \n    */\n    componentWillReceiveProps = (players) => {\n        this.setState({\n            playersdata: players.playersdata,\n            //renderPlayers: true,\n        })\n        //console.log(players)\n\n        console.log(\"Checking how many times this will call the update players!\")\n        this.updatePlayers(players.playersdata)\n    }\n\n    // For changing state when elements are changed on the page by user\n    handleChange(event) {\n\n    }\n    // For handling the players' submitting their guesses / word picks\n    handleGuessSubmit(event) {\n\n    }\n    incrementClueCount() {\n        this.setState(prevState => { // Update with inline function\n            return {\n                spymasterClueCount: prevState.spymasterClueCount + 1\n            }\n        })\n    }\n    decrementClueCount() {\n        this.setState(prevState => {\n            return {\n                spymasterClueCount: prevState.spymasterClueCount - 1\n            }\n        })\n    }\n\n    /*Issues: Being called twice so it adds double the amount until you refresh the page.\n        =>Fixed with the deleteRepeated() function    \n    */\n    updatePlayers = (players) => {\n        //console.log('Update Players Called!');\n        let room_key = this.props.room_key;\n        //let players = this.props.playersdata;\n        console.log(\"Players data: \", players)\n        //if(this.state.renderPlayers === true){\n\n        for(let i = 0; i < players.length; i++){\n            //console.log(\"Current Player: \", players[i])\n            if(players[i].room === room_key){\n                if(players[i].role === \"S\" ){\n                    if(players[i].team === \"R\"){\n                        //console.log(\"It went here [Red Spy]: \", players[i])\n                        let redSpymasters = this.state.redSpymasters\n                        redSpymasters.push(players[i])\n                        this.setState({\n                            redSpymasters,\n                        })\n                        \n                    }\n                    else if(players[i].team === \"B\"){\n                        //console.log(\"It went here [Blue Spy]: \", players[i])\n                        let blueSpymasters = this.state.blueSpymasters\n                        blueSpymasters.push(players[i])\n                        this.setState({\n                            blueSpymasters\n                        })\n                        \n                    }\n                }\n                else if(players[i].role === \"O\"){\n                    if(players[i].team === \"R\"){\n                        //console.log(\"It went here [Red Op]: \", players[i])\n                        let redOperatives = this.state.redOperatives\n                        redOperatives.push(players[i])\n                        this.setState({\n                            redOperatives\n                        })\n                        \n                    }\n                    else if(players[i].team === \"B\"){\n                        //console.log(\"It went here [Blue Op]: \", players[i])\n                        let blueOperatives = this.state.blueOperatives\n                        blueOperatives.push(players[i])\n                        this.setState({\n                            blueOperatives\n                        })\n                        \n                    }\n                    \n                }\n            \n            }\n        }\n        //}\n\n        this.deleteRepeated()\n    }\n\n    //This fixes the issue of having repeated players on intial load. \n    deleteRepeated = ()=> {\n        let redOperatives = this.state.redOperatives\n        let redSpymasters = this.state.redSpymasters\n        let blueOperatives = this.state.blueOperatives\n        let blueSpymasters = this.state.blueSpymasters\n        let showredOperatives = this.state.showredOperatives\n        let showredSpymasters = this.state.showredSpymasters\n        let showblueOperatives = this.state.showblueOperatives\n        let showblueSpymasters = this.state.showblueSpymasters\n\n        //Red Operatives\n        for (let i = 0; i < redOperatives.length; i++){\n            let repeated = false;\n            for (let j = 0; j < showredOperatives.length; j++){\n                if(redOperatives[i].player_id === showredOperatives[j].player_id){\n                    repeated = true\n                }\n            }\n            if (repeated === false){\n                showredOperatives.push(redOperatives[i])\n                this.setState({\n                    showredOperatives\n                })\n            }\n        }//end of for loop\n\n        //Red Spymasters\n        for (let i = 0; i < redSpymasters.length; i++){\n            let repeated = false;\n            for (let j = 0; j < showredSpymasters.length; j++){\n                if(redSpymasters[i].player_id === showredSpymasters[j].player_id){\n                    repeated = true\n                }\n            }\n            if (repeated === false){\n                showredSpymasters.push(redSpymasters[i])\n                this.setState({\n                    showredSpymasters\n                })\n            }\n        }\n\n        //Blue Operative\n        for (let i = 0; i < blueOperatives.length; i++){\n            let repeated = false;\n            for (let j = 0; j < showblueOperatives.length; j++){\n                if(blueOperatives[i].player_id === showblueOperatives[j].player_id){\n                    repeated = true\n                }\n            }\n            if (repeated === false){\n                showblueOperatives.push(blueOperatives[i])\n                this.setState({\n                    showblueOperatives\n                })\n            }\n        }\n\n        //Blue Spymasters\n        for (let i = 0; i < blueSpymasters.length; i++){\n            let repeated = false;\n            for (let j = 0; j < showblueSpymasters.length; j++){\n                if(blueSpymasters[i].player_id === showblueSpymasters[j].player_id){\n                    repeated = true\n                }\n            }\n            if (repeated === false){\n                showblueSpymasters.push(blueSpymasters[i])\n                this.setState({\n                    showblueSpymasters\n                })\n            }\n        }\n\n    }\n\n    render() {\n\n\n    return(\n        <div className=\"game\">\n            <br />\n            <h6>SPYMASTERS</h6>\n            <h6 className=\"gameCode\"> Game Code: {this.props.room_key} </h6>\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <div className=\"row\">\n                            <div className=\"col-md-4\">\n                                <div className=\"gameScores\">\n                                    <div className=\"redTeam\">\n                                        <div>\n                                    \n                                            <h6 className=\"teamTitle\">Red Team</h6>\n                                            <h6 className=\"teamScore\">{this.props.redPoints}</h6>\n                                        </div>\n                                        <br />\n                                        <br />\n                                        <h6 className=\"teamContent\"> Spymasters:</h6>\n                                            {this.state.showredSpymasters.map((player, index) => (\n                                                <li className=\"bulletContent\" key={index}>{player.operative_screen_name}</li>\n                                            ))}\n                                            {this.showRedSpymasters}\n                                        \n                                        <h6 className=\"teamContent\"> Operatives:</h6>\n                                            {this.state.showredOperatives.map((player, index )=> (\n                                                <li className=\"bulletContent\" key={index}>{player.operative_screen_name}</li>\n                                            ))}\n                                    </div>\n                                    <br />\n                                    <div className=\"blueTeam\">\n                                        <div>\n                                            <h6 className=\"teamTitle\">Blue Team</h6>\n                                            <h6 className=\"teamScore\">{this.props.bluePoints}</h6>\n                                        </div>\n                                        <br />\n                                        <br />\n                                        <h6 className=\"teamContent\"> Spymasters:</h6>\n                                            {this.state.showblueSpymasters.map((player, index) => (\n                                                <li className=\"bulletContent\" key={index}>{player.operative_screen_name}</li>\n                                            ))}\n                                        <h6 className=\"teamContent\"> Operatives:</h6>\n                                            {this.state.showblueOperatives.map((player, index)=> (\n                                                <li className=\"bulletContent\" key={index}>{player.operative_screen_name}</li>\n                                            ))}\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-7\"> {/* Changed back to div from a form */}\n                                    <div className=\"row\">\n                                        <div className=\"col-md-12\">\n\n                                            <Row task={this.state.task}\n                                                rowWords={[this.state.gameWords[0],\n                                                this.state.gameWords[1],\n                                                this.state.gameWords[2],\n                                                this.state.gameWords[3],\n                                                this.state.gameWords[4]]}\n                                                increaseTeamPoints={this.props.increaseTeamPoints} />\n                                            <Row task={this.state.task}\n                                                rowWords={[this.state.gameWords[5],\n                                                this.state.gameWords[6],\n                                                this.state.gameWords[7],\n                                                this.state.gameWords[8],\n                                                this.state.gameWords[9]]}\n                                                increaseTeamPoints={this.props.increaseTeamPoints} />\n                                            <Row task={this.state.task}\n                                                rowWords={[this.state.gameWords[10],\n                                                this.state.gameWords[11],\n                                                this.state.gameWords[12],\n                                                this.state.gameWords[13],\n                                                this.state.gameWords[14]]}\n                                                increaseTeamPoints={this.props.increaseTeamPoints} />\n                                            <Row task={this.state.task}\n                                                rowWords={[this.state.gameWords[15],\n                                                this.state.gameWords[16],\n                                                this.state.gameWords[17],\n                                                this.state.gameWords[18],\n                                                this.state.gameWords[19]]}\n                                                increaseTeamPoints={this.props.increaseTeamPoints} />\n                                            <Row task={this.state.task}\n                                                rowWords={[this.state.gameWords[20],\n                                                this.state.gameWords[21],\n                                                this.state.gameWords[22],\n                                                this.state.gameWords[23],\n                                                this.state.gameWords[24]]}\n                                                increaseTeamPoints={this.props.increaseTeamPoints} />\n                                        </div>\n                                    </div>\n                                    <div className=\"row\">\n                                        <div className=\"col-md-12\">\n                                            <form>\n                                                <div className=\"spymasterClue\">\n                                                    <input\n                                                        type=\"text\"\n                                                        value={this.state.spymasterClueWord}\n                                                        name=\"clueWord\"\n                                                        placeholder=\"Type clue here\"\n                                                        onChange={this.handleChange}\n                                                    />\n                                                    <div className=\"counter\">\n                                                        {/* type = \"button\" to NOT make it submit the form */}\n                                                        <button type=\"button\" onClick={this.incrementClueCount}>+</button>\n                                                        <h6>{this.state.spymasterClueCount}</h6>\n                                                        <button type=\"button\" onClick={this.decrementClueCount}>-</button>\n                                                    </div>\n                                                    <button>Submit Clue</button>\n                                                </div>\n                                            </form>\n                                        </div>\n                                    </div>\n                                </div> {/* Changed back to div from a form */}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default SpymastersGame\n"]},"metadata":{},"sourceType":"module"}