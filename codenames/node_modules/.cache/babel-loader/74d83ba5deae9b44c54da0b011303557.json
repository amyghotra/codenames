{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/micha/Codenames/codenames/codenames/src/Components/GamePage/Game.js\";\nimport React, { Component } from 'react';\nimport './Game.css';\nimport axios from 'axios';\nimport SpymastersGame from './Spymasters/SpymastersGame.js';\nimport OperativesGame from './Operatives/OperativesGame.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Game extends Component {\n  constructor() {\n    super();\n\n    this.componentDidMount = () => {\n      console.log('ddeeeeez', this.props.location.state.gameWords);\n      let gameWords = this.props.location.state.gameWords;\n\n      for (let i = 0; i < gameWords.length; i++) {\n        if (gameWords[i].category === 'D') {\n          this.setState({\n            doubleAgent: gameWords[i],\n            doubleAgentIndex: i\n          });\n        }\n      }\n\n      axios.get('http://127.0.0.1:8000/codenames/players').then(res => {\n        this.setState({\n          playersdata: res.data\n        });\n        let playerExist = false;\n\n        for (let i = 0; i < res.data.length; i++) {\n          if (res.data[i].game_id === this.props.location.state.gameid && res.data[i].room === this.props.location.state.room_key && res.data[i].user_id === this.props.location.state.playerid) {\n            playerExist = true;\n          }\n        }\n\n        if (playerExist === false) {\n          axios.post('http://127.0.0.1:8000/codenames/players', {\n            operative_screen_name: this.props.location.state.nickname,\n            team: this.props.location.state.team,\n            role: this.props.location.state.task,\n            room: this.props.location.state.room_key,\n            game_id: this.props.location.state.gameid,\n            user_id: this.props.location.state.playerid\n          });\n        }\n      });\n      this.setState({\n        room_key: this.props.location.state.room_key,\n        roomid: this.props.location.state.roomid,\n        nickname: this.props.location.state.nickname,\n        team: this.props.location.state.team,\n        task: this.props.location.state.task,\n        gameid: this.props.location.state.gameid,\n        gameData: this.props.location.state.gameData,\n        gameWords: this.props.location.state.gameWords,\n        playerid: this.props.location.state.playerid\n      });\n    };\n\n    this.setDoubleAgent = () => {\n      let doubleAgent = { ...this.state.doubleAgent\n      };\n      doubleAgent.category = this.state.team;\n      this.setState({\n        doubleAgent\n      });\n      axios.put(`http://127.0.0.1:8000/codenames/games/word/${this.state.doubleAgent.word_id}`, doubleAgent).then(res => {\n        console.log(res);\n        this.updateGameWords();\n      });\n    };\n\n    this.updateGameWords = () => {\n      axios.get(`http://127.0.0.1:8000/codenames/games/${this.state.gameid}`).then(res => {\n        this.setState({\n          gameWords: res.data.gameWords\n        });\n      });\n    };\n\n    this.state = {\n      room_key: '',\n      roomid: '',\n      nickname: '',\n      team: '',\n      playerid: '',\n      task: '',\n      red_score: 0,\n      blue_score: 0,\n      gameid: '',\n      gameData: '',\n      gameWords: '',\n      doubleAgent: '',\n      doubleAgentIndex: '',\n      playersdata: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.task === 'S' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.setDoubleAgent,\n          children: \"I WANT FIRST\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(SpymastersGame, {\n          room_key: this.state.room_key,\n          gameWords: this.state.gameWords\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(OperativesGame, {\n        room_key: this.state.room_key,\n        gameWords: this.state.gameWords\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/mnt/c/Users/micha/Codenames/codenames/codenames/src/Components/GamePage/Game.js"],"names":["React","Component","axios","SpymastersGame","OperativesGame","Game","constructor","componentDidMount","console","log","props","location","state","gameWords","i","length","category","setState","doubleAgent","doubleAgentIndex","get","then","res","playersdata","data","playerExist","game_id","gameid","room","room_key","user_id","playerid","post","operative_screen_name","nickname","team","role","task","roomid","gameData","setDoubleAgent","put","word_id","updateGameWords","red_score","blue_score","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport './Game.css'\nimport axios from 'axios'\nimport SpymastersGame from './Spymasters/SpymastersGame.js'\nimport OperativesGame from './Operatives/OperativesGame.js'\n\n\nclass Game extends Component {\n    constructor() {\n        super()\n        this.state = {\n            room_key: '',\n            roomid: '',\n            nickname: '',\n            team: '',\n            playerid: '',\n            task: '',\n            red_score: 0,\n            blue_score: 0,\n            gameid: '',\n            gameData: '', \n            gameWords: '',\n            doubleAgent: '',\n            doubleAgentIndex: '',\n            playersdata: '',\n        }\n    }\n\n    componentDidMount = () => {\n        console.log('ddeeeeez', this.props.location.state.gameWords)\n        let gameWords = this.props.location.state.gameWords;\n        for(let i = 0; i < gameWords.length; i++) {\n            if(gameWords[i].category === 'D') {\n                this.setState({\n                    doubleAgent: gameWords[i],\n                    doubleAgentIndex: i\n                })\n            }\n        }\n\n\n\n        axios.get('http://127.0.0.1:8000/codenames/players').then(res => {\n            this.setState({\n                playersdata: res.data\n            })\n            let playerExist = false;\n            for(let i = 0; i < res.data.length; i++) {\n                if(res.data[i].game_id === this.props.location.state.gameid && res.data[i].room === this.props.location.state.room_key && res.data[i].user_id === this.props.location.state.playerid) {\n                    playerExist = true;\n                }\n            }\n\n            if(playerExist === false) {\n                axios.post('http://127.0.0.1:8000/codenames/players', {\n                    operative_screen_name: this.props.location.state.nickname,\n                    team: this.props.location.state.team,\n                    role: this.props.location.state.task,\n                    room: this.props.location.state.room_key,\n                    game_id: this.props.location.state.gameid,\n                    user_id: this.props.location.state.playerid\n                })\n            }\n        })\n        this.setState({\n            room_key: this.props.location.state.room_key,\n            roomid: this.props.location.state.roomid,\n            nickname: this.props.location.state.nickname,\n            team: this.props.location.state.team,\n            task: this.props.location.state.task,\n            gameid: this.props.location.state.gameid,\n            gameData: this.props.location.state.gameData,\n            gameWords: this.props.location.state.gameWords,\n            playerid: this.props.location.state.playerid\n        })\n    }\n    \n    setDoubleAgent = () => {\n        let doubleAgent = { ...this.state.doubleAgent};\n        doubleAgent.category = this.state.team;\n        this.setState({\n            doubleAgent\n        })\n\n        axios.put(`http://127.0.0.1:8000/codenames/games/word/${this.state.doubleAgent.word_id}`, doubleAgent)\n            .then(res => {\n                console.log(res)\n                this.updateGameWords()\n            })\n        \n    }\n\n    updateGameWords = () => {\n        axios.get(`http://127.0.0.1:8000/codenames/games/${this.state.gameid}`).then(res => {\n            this.setState({ \n                gameWords: res.data.gameWords \n            })\n        \n        })\n        \n    }\n\n    \n\n    render() {\n        return(\n            <div>\n                {\n                    this.state.task === 'S' ?\n                    \n                    <div>\n                        <button onClick={this.setDoubleAgent}>I WANT FIRST</button>\n                        <SpymastersGame \n                            room_key = {this.state.room_key}\n                            gameWords = {this.state.gameWords}\n                        />\n                    </div>\n                    : \n\n                    <OperativesGame \n                        room_key = {this.state.room_key}\n                        gameWords = {this.state.gameWords}\n                    />\n                }\n            </div>\n        )\n    }\n}\n\nexport default Game"]},"metadata":{},"sourceType":"module"}