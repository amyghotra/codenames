{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/micha/Codenames/codenames/codenames/src/Components/UserInfo/UserInfo.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Redirect } from 'react-router-dom';\nimport './UserInfo.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UserInfo extends Component {\n  constructor() {\n    super();\n\n    this.componentDidMount = () => {\n      this.setState({\n        room_key: this.props.location.state.room_key\n      });\n      axios.get('http://127.0.0.1:8000/codenames/games').then(res => {\n        // console.log(res.data)\n        this.setState({\n          gamesData: res.data\n        });\n      });\n\n      if (!this.props.location.state.roomid) {\n        axios.get('http://127.0.0.1:8000/codenames/').then(res => {\n          console.log(res.data);\n          this.setState({\n            roomsData: res.data\n          });\n        });\n      }\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.setRed = () => {\n      this.setState({\n        team: 'R'\n      });\n    };\n\n    this.setBlue = () => {\n      this.setState({\n        team: 'B'\n      });\n    };\n\n    this.submitUserInfo = () => {\n      if (this.state.room_key !== null && this.state.nickname !== null && this.state.team !== null && this.state.task !== null) {\n        axios.post('http://127.0.0.1:8000/codenames/userInfo', {\n          connected_room_key: this.props.location.state.room_key,\n          nickname: this.state.nickname,\n          team: this.state.team,\n          task: this.state.task\n        }).then(repsonse => {\n          console.log('RESPONSE: ', repsonse);\n\n          for (let i = 0; i < this.state.gamesData.length; i++) {\n            console.log(this.state.gamesData[i].connected_room_key, \" \", this.props.location.state.id);\n\n            if (this.state.gamesData[i].connected_room_key === this.props.location.state.roomid) {\n              console.log('this worked');\n              this.setState({\n                gameid: this.state.gamesData[i].game_id\n              });\n            }\n          }\n\n          this.createGame();\n        }).catch(error => {\n          console.log(error);\n        });\n      }\n    };\n\n    this.createGame = () => {\n      if (this.state.gameid === 0) {\n        axios.post('http://127.0.0.1:8000/codenames/games', {\n          connected_room_key: this.props.location.state.room_key\n        });\n        axios.get('http://127.0.0.1:8000/codenames/games').then(res => {\n          for (let i = 0; i < res.data.legnth; i++) {\n            if (res.data[i].connected_room_key === this.props.location.state.room_key) {\n              this.setState({\n                gameid: res.data[i].game_id\n              });\n              console.log(res.data[i].game_id, \" game id incoming\");\n            }\n          }\n        });\n      }\n\n      if (this.state.team === 'R') {\n        axios.post('http://127.0.0.1:8000/codenames/redTeam', {\n          connected_room_key: this.props.location.state.room_key\n        });\n      } else if (this.state.team === 'B') {\n        axios.post('http://127.0.0.1:8000/codenames/blueTeam', {\n          connected_room_key: this.props.location.state.room_key\n        });\n      } // this.setState({\n      //     redirect: true\n      // })\n\n    };\n\n    this.renderRedirect = () => {\n      if (this.state.redirect) {\n        console.log(this.state.nickname);\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: {\n            pathname: '/game',\n            state: {\n              room_key: this.state.room_key,\n              nickname: this.state.nickname,\n              team: this.state.team,\n              task: this.state.task\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 20\n        }, this);\n      }\n    };\n\n    this.setSpy = () => {\n      this.setState({\n        task: 'S'\n      });\n    };\n\n    this.setOper = () => {\n      this.setState({\n        task: 'O'\n      });\n    };\n\n    this.state = {\n      room_key: '',\n      roomid: '',\n      roomsData: '',\n      nickname: '',\n      team: '',\n      task: '',\n      redirect: false,\n      gamesData: '',\n      gameid: 0\n    };\n  }\n\n  render() {\n    // const text = this.state.blue_team ? \"blue team\" : \"red Team\"\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userInfo\",\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"gameCode\",\n        children: [\" Game Code: \", this.state.room_key, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box-userInfo-left\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"prompt\",\n            children: \"Enter nickname\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 73\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 78\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"nickname\",\n            value: this.state.nickname,\n            name: \"nickname\",\n            type: \"text\",\n            placeholder: \"Nickname\",\n            spellCheck: \"false\",\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 55\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"prompt\",\n            children: \"Select task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 70\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"task\",\n            type: \"button\",\n            onClick: this.setSpy,\n            children: \"spymaster\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 104\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"task\",\n            type: \"button\",\n            onClick: this.setOper,\n            children: \"operator\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box-userInfo-right\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"prompt\",\n            children: \"Choose a team\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 72\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"red\",\n            type: \"button\",\n            onClick: this.setRed\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 92\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"blue\",\n            type: \"button\",\n            onClick: this.setBlue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 94\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this), this.renderRedirect(), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"startBtn\",\n          type: \"button\",\n          onClick: this.submitUserInfo,\n          children: \"Start!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default UserInfo;","map":{"version":3,"sources":["/mnt/c/Users/micha/Codenames/codenames/codenames/src/Components/UserInfo/UserInfo.js"],"names":["React","Component","axios","Redirect","UserInfo","constructor","componentDidMount","setState","room_key","props","location","state","get","then","res","gamesData","data","roomid","console","log","roomsData","handleChange","event","target","name","value","setRed","team","setBlue","submitUserInfo","nickname","task","post","connected_room_key","repsonse","i","length","id","gameid","game_id","createGame","catch","error","legnth","renderRedirect","redirect","pathname","setSpy","setOper","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios'\nimport {Redirect} from 'react-router-dom'\nimport './UserInfo.css'\n\n\nclass UserInfo extends Component {\n    constructor() {\n        super()\n        this.state = {\n            room_key: '',\n            roomid: '',\n            roomsData: '',\n            nickname: '',\n            team: '',\n            task: '',\n            redirect: false,\n            gamesData: '',\n            gameid: 0\n        }\n    }\n\n    componentDidMount = () => {   \n        this.setState({\n            room_key: this.props.location.state.room_key\n        })\n        axios.get('http://127.0.0.1:8000/codenames/games').then(res => {\n            // console.log(res.data)\n            this.setState({\n                gamesData: res.data\n            })\n        }) \n\n        if(!this.props.location.state.roomid) {\n            axios.get('http://127.0.0.1:8000/codenames/').then(res => {\n                console.log(res.data)\n                this.setState({ roomsData: res.data })\n            })\n            \n        }\n    }\n\n    handleChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    setRed = () => {\n        this.setState({\n            team: 'R'\n        })\n    }\n\n    setBlue = () => {\n        this.setState({\n            team: 'B'\n        })\n    }\n\n   \n    submitUserInfo = () => {        \n        if(this.state.room_key !== null && this.state.nickname !== null && this.state.team !== null && this.state.task !== null) {\n            axios.post('http://127.0.0.1:8000/codenames/userInfo', {\n                connected_room_key:this.props.location.state.room_key,\n                nickname: this.state.nickname, \n                team: this.state.team,\n                task: this.state.task\n            })\n            .then(repsonse => {\n                console.log('RESPONSE: ', repsonse)\n                for(let i = 0; i < this.state.gamesData.length; i++) {\n                    console.log(this.state.gamesData[i].connected_room_key, \" \", this.props.location.state.id)\n                    if (this.state.gamesData[i].connected_room_key === this.props.location.state.roomid) {\n                        console.log('this worked')\n                        this.setState({\n                            gameid: this.state.gamesData[i].game_id\n                        })\n                    }\n                }\n                this.createGame()\n            })\n            .catch(error => {\n                console.log(error)\n            })\n        }\n\n\n    }\n\n    createGame = () => {\n        if(this.state.gameid === 0) {\n            axios.post('http://127.0.0.1:8000/codenames/games', {\n                connected_room_key: this.props.location.state.room_key\n            })\n\n            axios.get('http://127.0.0.1:8000/codenames/games').then(res => {\n                for(let i = 0; i < res.data.legnth; i++) {\n                    if(res.data[i].connected_room_key === this.props.location.state.room_key) {\n                        this.setState({\n                            gameid: res.data[i].game_id\n                        })\n                        console.log(res.data[i].game_id, \" game id incoming\")\n                    }\n                }\n            }) \n\n        }\n\n        if (this.state.team === 'R') {\n            axios.post('http://127.0.0.1:8000/codenames/redTeam', {\n                connected_room_key: this.props.location.state.room_key\n            })\n        }\n        else if (this.state.team === 'B') {\n            axios.post('http://127.0.0.1:8000/codenames/blueTeam', {\n                connected_room_key: this.props.location.state.room_key\n            })\n        }\n        // this.setState({\n        //     redirect: true\n        // })\n    }\n\n    renderRedirect = () => {\n        if(this.state.redirect){\n            console.log(this.state.nickname)\n            return <Redirect to={{\n                pathname: '/game',\n                state: {\n                    room_key: this.state.room_key,\n                    nickname: this.state.nickname,\n                    team: this.state.team,\n                    task: this.state.task\n\n                }\n            }}/>\n        }\n    }\n\n    setSpy = () => {\n        this.setState({\n            task: 'S'\n        })\n    }\n\n    setOper = () => {\n        this.setState({\n            task: 'O'\n        })\n    }\n\n    \n    render() {\n        \n        // const text = this.state.blue_team ? \"blue team\" : \"red Team\"\n        return(\n            <div className=\"userInfo\">\n                <br />\n                <h6 className=\"gameCode\"> Game Code: {this.state.room_key} </h6>\n                <form className=\"container\">\n                    <div className=\"box-userInfo-left\">\n                        <label className=\"prompt\">Enter nickname</label><br/><br/>\n                        <input \n                        className=\"nickname\" \n                        value={this.state.nickname}\n                        name= \"nickname\"\n                        type=\"text\" \n                        placeholder=\"Nickname\" \n                        spellCheck=\"false\" \n                        onChange={this.handleChange}/><br/>\n                        <label className=\"prompt\">Select task</label><br/>\n                        <button className=\"task\" type=\"button\" onClick={this.setSpy}>spymaster</button><br/>\n                        <button className=\"task\" type=\"button\" onClick={this.setOper}>operator</button>\n\n                    </div>\n                    <div className=\"box-userInfo-right\">\n                        <label className=\"prompt\">Choose a team</label><br/>\n                        <input className=\"red\" type=\"button\" onClick={this.setRed}></input><br/>\n                        {/* <p>{text}</p> */}\n                        <input className=\"blue\" type=\"button\" onClick={this.setBlue}></input><br/>\n                        \n                    </div>\n                    {this.renderRedirect()}\n                    <button className=\"startBtn\" type=\"button\" onClick={this.submitUserInfo}>Start!</button>\n\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default UserInfo"]},"metadata":{},"sourceType":"module"}