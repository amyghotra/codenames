{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/micha/Codenames/codenames/codenames/src/Components/UserInfo/UserInfo.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Redirect } from 'react-router-dom';\nimport './UserInfo.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UserInfo extends Component {\n  constructor() {\n    super();\n\n    this.componentDidMount = () => {\n      //for when the user is joining a room that already exist   \n      this.setState({\n        room_key: this.props.location.state.room_key,\n        roomid: this.props.location.state.roomid\n      }); //set all the existing games to state\n\n      axios.get('http://127.0.0.1:8000/codenames/games').then(res => {\n        this.setState({\n          gamesData: res.data\n        });\n        this.renderGameId(this.props.location.state.roomid);\n      });\n    };\n\n    this.renderGameId = roomid => {\n      let roomidexist = false;\n      axios.get('http://127.0.0.1:8000/codenames/games').then(res => {\n        for (let i = 0; i < res.data.length; i++) {\n          if (res.data[i].connected_room_key === roomid) {\n            roomidexist = true;\n            this.setState({\n              gameid: res.data[i].game_id\n            });\n            this.renderTeamId(res.data[i].game_id);\n          }\n        }\n\n        if (roomidexist === false) {\n          axios.post('http://127.0.0.1:8000/codenames/games', {\n            connected_room_key: roomid\n          }).then(res => {\n            this.setState({\n              gameid: res.data.game_id\n            });\n            this.renderTeamId(res.data.game_id);\n          });\n        }\n      });\n    };\n\n    this.renderTeamId = gameid => {\n      console.log(gameid);\n      let redteamidexist = false;\n      let blueteamidexist = false;\n      axios.get('http://127.0.0.1:8000/codenames/redTeam').then(res => {\n        for (let i = 0; i < res.data.length; i++) {\n          if (res.data[i].game_id === gameid) {\n            redteamidexist = true;\n            console.log(redteamidexist);\n            this.setState({\n              redteamid: res.data[i].red_team_id\n            });\n          }\n        }\n      });\n      axios.get('http://127.0.0.1:8000/codenames/blueTeam').then(res => {\n        for (let i = 0; i < res.data.length; i++) {\n          if (res.data[i].game_id === gameid) {\n            blueteamidexist = true;\n            console.log(blueteamidexist);\n            this.setState({\n              blueteamid: res.data[i].blue_team_id\n            });\n          }\n        }\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.setRed = () => {\n      this.setState({\n        team: 'R'\n      });\n    };\n\n    this.setBlue = () => {\n      this.setState({\n        team: 'B'\n      });\n    };\n\n    this.submitUserInfo = () => {\n      if (this.state.room_key !== null && this.state.nickname !== null && this.state.team !== null && this.state.task !== null) {\n        axios.post('http://127.0.0.1:8000/codenames/userInfo', {\n          connected_room_key: this.props.location.state.room_key,\n          nickname: this.state.nickname,\n          team: this.state.team,\n          task: this.state.task\n        }).then(repsonse => {\n          console.log('RESPONSE: ', repsonse);\n\n          for (let i = 0; i < this.state.gamesData.length; i++) {\n            if (this.state.gamesData[i].connected_room_key === this.state.roomid) {\n              this.setState({\n                gameid: this.state.gamesData[i].game_id\n              });\n            }\n          }\n\n          this.createGame();\n        }).catch(error => {\n          console.log(error);\n        });\n      }\n    };\n\n    this.createGame = () => {\n      // if (this.state.team === 'R') {\n      //     axios.post('http://127.0.0.1:8000/codenames/redTeam', {\n      //         game_id: this.state.gameid,\n      //         connected_room_key: this.state.roomid\n      //     }).then(response => {\n      //         console.log(response)\n      //     })\n      //     .catch(error => {\n      //         console.log(error)\n      //     }) \n      // }\n      if (this.state.team === 'B') {\n        console.log(\"entered here\");\n        axios.post('http://127.0.0.1:8000/codenames/blueTeam', {\n          game_id: this.state.gameid,\n          connected_room_key: this.state.roomid\n        });\n      } // this.setState({\n      //     redirect: true\n      // })\n\n    };\n\n    this.renderRedirect = () => {\n      if (this.state.redirect) {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: {\n            pathname: '/game',\n            state: {\n              room_key: this.state.room_key,\n              roomid: this.state.roomid,\n              nickname: this.state.nickname,\n              team: this.state.team,\n              task: this.state.task,\n              gameid: this.state.gameid\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 20\n        }, this);\n      }\n    };\n\n    this.setSpy = () => {\n      this.setState({\n        task: 'S'\n      });\n    };\n\n    this.setOper = () => {\n      this.setState({\n        task: 'O'\n      });\n    };\n\n    this.state = {\n      room_key: '',\n      roomid: '',\n      nickname: '',\n      team: '',\n      redteamid: '',\n      blueteamid: '',\n      task: '',\n      redirect: false,\n      gamesData: '',\n      gameid: 0\n    };\n  }\n\n  render() {\n    // const text = this.state.blue_team ? \"blue team\" : \"red Team\"\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userInfo\",\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"gameCode\",\n        children: [\" Game Code: \", this.state.room_key, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box-userInfo-left\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"prompt\",\n            children: \"Enter nickname\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 73\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 78\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"nickname\",\n            value: this.state.nickname,\n            name: \"nickname\",\n            type: \"text\",\n            placeholder: \"Nickname\",\n            spellCheck: \"false\",\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 55\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"prompt\",\n            children: \"Select task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 70\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"task\",\n            type: \"button\",\n            onClick: this.setSpy,\n            children: \"spymaster\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 104\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"task\",\n            type: \"button\",\n            onClick: this.setOper,\n            children: \"operator\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box-userInfo-right\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"prompt\",\n            children: \"Choose a team\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 72\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"red\",\n            type: \"button\",\n            onClick: this.setRed\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 92\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"blue\",\n            type: \"button\",\n            onClick: this.setBlue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 94\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }, this), this.renderRedirect(), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"startBtn\",\n          type: \"button\",\n          onClick: this.submitUserInfo,\n          children: \"Start!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default UserInfo;","map":{"version":3,"sources":["/mnt/c/Users/micha/Codenames/codenames/codenames/src/Components/UserInfo/UserInfo.js"],"names":["React","Component","axios","Redirect","UserInfo","constructor","componentDidMount","setState","room_key","props","location","state","roomid","get","then","res","gamesData","data","renderGameId","roomidexist","i","length","connected_room_key","gameid","game_id","renderTeamId","post","console","log","redteamidexist","blueteamidexist","redteamid","red_team_id","blueteamid","blue_team_id","handleChange","event","target","name","value","setRed","team","setBlue","submitUserInfo","nickname","task","repsonse","createGame","catch","error","renderRedirect","redirect","pathname","setSpy","setOper","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios'\nimport {Redirect} from 'react-router-dom'\nimport './UserInfo.css'\n\n\nclass UserInfo extends Component {\n    constructor() {\n        super()\n        this.state = {\n            room_key: '',\n            roomid: '',\n            nickname: '',\n            team: '',\n            redteamid: '',\n            blueteamid: '',\n            task: '',\n            redirect: false,\n            gamesData: '',\n            gameid: 0\n        }\n    }\n\n    componentDidMount = () => {\n        //for when the user is joining a room that already exist   \n        this.setState({\n            room_key: this.props.location.state.room_key,\n            roomid: this.props.location.state.roomid\n        })\n\n        //set all the existing games to state\n        axios.get('http://127.0.0.1:8000/codenames/games').then(res => {\n            this.setState({\n                gamesData: res.data\n            })\n            this.renderGameId(this.props.location.state.roomid)\n        })\n\n    }\n\n    //make the game as long as the roomid exist and if there isnt a game that matches the roomid already\n    renderGameId = (roomid) => {\n\n        let roomidexist = false;\n\n        axios.get('http://127.0.0.1:8000/codenames/games').then(res => {\n            for(let i = 0; i < res.data.length; i++) {\n                if(res.data[i].connected_room_key === roomid) {\n                    roomidexist = true;\n                    this.setState({\n                        gameid: res.data[i].game_id\n                    })\n                    this.renderTeamId(res.data[i].game_id)\n                }\n            }\n            if(roomidexist === false) {\n                axios.post('http://127.0.0.1:8000/codenames/games', {\n                    connected_room_key: roomid\n                }).then(res => {\n                    this.setState({\n                        gameid: res.data.game_id\n                    })\n                    this.renderTeamId(res.data.game_id)\n                })\n            }\n        })\n\n\n    }\n\n    renderTeamId = (gameid) => {\n        console.log(gameid)\n        let redteamidexist = false; \n        let blueteamidexist = false;\n\n        axios.get('http://127.0.0.1:8000/codenames/redTeam').then(res => {\n            for(let i = 0; i < res.data.length; i++) {\n                if(res.data[i].game_id === gameid) {\n                    redteamidexist = true;\n                    console.log(redteamidexist)\n                    this.setState({\n                        redteamid: res.data[i].red_team_id\n                    })\n                }\n            }\n        })\n\n        axios.get('http://127.0.0.1:8000/codenames/blueTeam').then(res => {\n            for(let i = 0; i < res.data.length; i++) {\n                if(res.data[i].game_id === gameid) {\n                    blueteamidexist = true;\n                    console.log(blueteamidexist)\n                    this.setState({\n                        blueteamid: res.data[i].blue_team_id\n                    })\n                }\n            }\n        })\n    }\n\n    handleChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    setRed = () => {\n        this.setState({\n            team: 'R'\n        })\n    }\n\n    setBlue = () => {\n        this.setState({\n            team: 'B'\n        })\n    }\n\n   \n    submitUserInfo = () => {        \n        if(this.state.room_key !== null && this.state.nickname !== null && this.state.team !== null && this.state.task !== null) {\n            axios.post('http://127.0.0.1:8000/codenames/userInfo', {\n                connected_room_key:this.props.location.state.room_key,\n                nickname: this.state.nickname, \n                team: this.state.team,\n                task: this.state.task\n            })\n            .then(repsonse => {\n                console.log('RESPONSE: ', repsonse)\n                for(let i = 0; i < this.state.gamesData.length; i++) {\n                    if (this.state.gamesData[i].connected_room_key === this.state.roomid) {\n                        this.setState({\n                            gameid: this.state.gamesData[i].game_id\n                        })\n                    }\n                }\n                this.createGame()\n            })\n            .catch(error => {\n                console.log(error)\n            })\n        }\n\n\n    }\n\n    createGame = () => {\n        // if (this.state.team === 'R') {\n        //     axios.post('http://127.0.0.1:8000/codenames/redTeam', {\n        //         game_id: this.state.gameid,\n        //         connected_room_key: this.state.roomid\n        //     }).then(response => {\n        //         console.log(response)\n        //     })\n        //     .catch(error => {\n        //         console.log(error)\n        //     }) \n        // }\n        if (this.state.team === 'B') {\n            console.log(\"entered here\");\n            axios.post('http://127.0.0.1:8000/codenames/blueTeam', {\n                game_id: this.state.gameid,\n                connected_room_key: this.state.roomid\n            })\n        }\n\n        // this.setState({\n        //     redirect: true\n        // })\n    }\n\n    renderRedirect = () => {\n        if(this.state.redirect){\n            return <Redirect to={{\n                pathname: '/game',\n                state: {\n                    room_key: this.state.room_key,\n                    roomid: this.state.roomid,\n                    nickname: this.state.nickname,\n                    team: this.state.team,\n                    task: this.state.task,\n                    gameid: this.state.gameid\n                }\n            }}/>\n        }\n    }\n\n    setSpy = () => {\n        this.setState({\n            task: 'S'\n        })\n    }\n\n    setOper = () => {\n        this.setState({\n            task: 'O'\n        })\n    }\n\n    \n    render() {\n        \n        // const text = this.state.blue_team ? \"blue team\" : \"red Team\"\n        return(\n            <div className=\"userInfo\">\n                <br />\n                <h6 className=\"gameCode\"> Game Code: {this.state.room_key} </h6>\n                <form className=\"container\">\n                    <div className=\"box-userInfo-left\">\n                        <label className=\"prompt\">Enter nickname</label><br/><br/>\n                        <input \n                        className=\"nickname\" \n                        value={this.state.nickname}\n                        name= \"nickname\"\n                        type=\"text\" \n                        placeholder=\"Nickname\" \n                        spellCheck=\"false\" \n                        onChange={this.handleChange}/><br/>\n                        <label className=\"prompt\">Select task</label><br/>\n                        <button className=\"task\" type=\"button\" onClick={this.setSpy}>spymaster</button><br/>\n                        <button className=\"task\" type=\"button\" onClick={this.setOper}>operator</button>\n\n                    </div>\n                    <div className=\"box-userInfo-right\">\n                        <label className=\"prompt\">Choose a team</label><br/>\n                        <input className=\"red\" type=\"button\" onClick={this.setRed}></input><br/>\n                        {/* <p>{text}</p> */}\n                        <input className=\"blue\" type=\"button\" onClick={this.setBlue}></input><br/>\n                        \n                    </div>\n                    {this.renderRedirect()}\n                    <button className=\"startBtn\" type=\"button\" onClick={this.submitUserInfo}>Start!</button>\n\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default UserInfo"]},"metadata":{},"sourceType":"module"}