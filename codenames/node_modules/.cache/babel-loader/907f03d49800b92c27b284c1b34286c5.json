{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/micha/Codenames/codenames/codenames/src/Components/UserInfo/UserInfo.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Redirect } from 'react-router-dom';\nimport './UserInfo.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UserInfo extends Component {\n  constructor() {\n    super();\n\n    this.componentDidMount = () => {\n      axios.get('http://127.0.0.1:8000/codenames/games').then(res => {});\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.setRed = () => {\n      this.setState({\n        team: 'R'\n      });\n    };\n\n    this.setBlue = () => {\n      this.setState({\n        team: 'B'\n      });\n    };\n\n    this.submitUserInfo = () => {\n      console.log(this.state.room_key);\n\n      if (this.state.room_key !== null && this.state.nickname !== null && this.state.team !== null && this.state.task !== null) {\n        axios.post('http://127.0.0.1:8000/codenames/userInfo', {\n          connected_room_key: this.props.location.state.room_key,\n          nickname: this.state.nickname,\n          team: this.state.team,\n          task: this.state.task\n        }).then(repsonse => {\n          console.log(repsonse);\n          this.createGame();\n        }).catch(error => {\n          console.log(error);\n        });\n      }\n    };\n\n    this.createGame = () => {\n      axios.post('http://127.0.0.1:8000/codenames/games', {\n        connected_room_key: this.props.location.state.room_key\n      });\n\n      if (this.state.team === 'R') {\n        axios.post('http://127.0.0.1:8000/codenames/redTeam', {\n          connected_room_key: this.props.location.state.room_key\n        });\n      } else if (this.state.team === 'B') {\n        axios.post('http://127.0.0.1:8000/codenames/blueTeam', {\n          connected_room_key: this.props.location.state.room_key\n        });\n      } // this.setState({\n      //     redirect: true\n      // })\n\n    };\n\n    this.renderRedirect = () => {\n      if (this.state.redirect) {\n        console.log(this.state.nickname);\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: {\n            pathname: '/game',\n            state: {\n              room_key: this.state.room_key,\n              nickname: this.state.nickname,\n              team: this.state.team,\n              task: this.state.task\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 20\n        }, this);\n      }\n    };\n\n    this.setSpy = () => {\n      this.setState({\n        task: 'S'\n      });\n    };\n\n    this.setOper = () => {\n      this.setState({\n        task: 'O'\n      });\n    };\n\n    this.state = {\n      room_key: '',\n      nickname: '',\n      team: '',\n      task: '',\n      redirect: false,\n      gamesData: '',\n      gameid: ''\n    };\n  }\n\n  render() {\n    // const text = this.state.blue_team ? \"blue team\" : \"red Team\"\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userInfo\",\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"gameCode\",\n        children: [\" Game Code: \", this.state.room_key, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box-userInfo-left\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"prompt\",\n            children: \"Enter nickname\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 73\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 78\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"nickname\",\n            value: this.state.nickname,\n            name: \"nickname\",\n            type: \"text\",\n            placeholder: \"Nickname\",\n            spellCheck: \"false\",\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 55\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"prompt\",\n            children: \"Select task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 70\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"task\",\n            type: \"button\",\n            onClick: this.setSpy,\n            children: \"spymaster\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 104\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"task\",\n            type: \"button\",\n            onClick: this.setOper,\n            children: \"operator\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box-userInfo-right\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"prompt\",\n            children: \"Choose a team\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 72\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"red\",\n            type: \"button\",\n            onClick: this.setRed\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 92\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"blue\",\n            type: \"button\",\n            onClick: this.setBlue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 94\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this), this.renderRedirect(), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"startBtn\",\n          type: \"button\",\n          onClick: this.submitUserInfo,\n          children: \"Start!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default UserInfo;","map":{"version":3,"sources":["/mnt/c/Users/micha/Codenames/codenames/codenames/src/Components/UserInfo/UserInfo.js"],"names":["React","Component","axios","Redirect","UserInfo","constructor","componentDidMount","get","then","res","handleChange","event","setState","target","name","value","setRed","team","setBlue","submitUserInfo","console","log","state","room_key","nickname","task","post","connected_room_key","props","location","repsonse","createGame","catch","error","renderRedirect","redirect","pathname","setSpy","setOper","gamesData","gameid","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios'\nimport {Redirect} from 'react-router-dom'\nimport './UserInfo.css'\n\n\nclass UserInfo extends Component {\n    constructor() {\n        super()\n        this.state = {\n            room_key: '',\n            nickname: '',\n            team: '',\n            task: '',\n            redirect: false,\n            gamesData: '',\n            gameid: ''\n        }\n    }\n\n    componentDidMount = () => {   \n        axios.get('http://127.0.0.1:8000/codenames/games').then(res => {\n\n        }) \n    }\n\n    handleChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    setRed = () => {\n        this.setState({\n            team: 'R'\n        })\n    }\n\n    setBlue = () => {\n        this.setState({\n            team: 'B'\n        })\n    }\n\n   \n    submitUserInfo = () => {\n        console.log(this.state.room_key)\n        \n        if(this.state.room_key !== null && this.state.nickname !== null && this.state.team !== null && this.state.task !== null) {\n            axios.post('http://127.0.0.1:8000/codenames/userInfo', {\n                connected_room_key:this.props.location.state.room_key,\n                nickname: this.state.nickname, \n                team: this.state.team,\n                task: this.state.task\n            })\n            .then(repsonse => {\n                console.log(repsonse)\n                this.createGame()\n            })\n            .catch(error => {\n                console.log(error)\n            })\n        }\n\n\n    }\n\n    createGame = () => {\n        axios.post('http://127.0.0.1:8000/codenames/games', {\n            connected_room_key: this.props.location.state.room_key\n        })\n\n        if (this.state.team === 'R') {\n            axios.post('http://127.0.0.1:8000/codenames/redTeam', {\n                connected_room_key: this.props.location.state.room_key\n            })\n        }\n        else if (this.state.team === 'B') {\n            axios.post('http://127.0.0.1:8000/codenames/blueTeam', {\n                connected_room_key: this.props.location.state.room_key\n            })\n        }\n        // this.setState({\n        //     redirect: true\n        // })\n    }\n\n    renderRedirect = () => {\n        if(this.state.redirect){\n            console.log(this.state.nickname)\n            return <Redirect to={{\n                pathname: '/game',\n                state: {\n                    room_key: this.state.room_key,\n                    nickname: this.state.nickname,\n                    team: this.state.team,\n                    task: this.state.task\n\n                }\n            }}/>\n        }\n    }\n\n    setSpy = () => {\n        this.setState({\n            task: 'S'\n        })\n    }\n\n    setOper = () => {\n        this.setState({\n            task: 'O'\n        })\n    }\n\n    \n    render() {\n        \n        // const text = this.state.blue_team ? \"blue team\" : \"red Team\"\n        return(\n            <div className=\"userInfo\">\n                <br />\n                <h6 className=\"gameCode\"> Game Code: {this.state.room_key} </h6>\n                <form className=\"container\">\n                    <div className=\"box-userInfo-left\">\n                        <label className=\"prompt\">Enter nickname</label><br/><br/>\n                        <input \n                        className=\"nickname\" \n                        value={this.state.nickname}\n                        name= \"nickname\"\n                        type=\"text\" \n                        placeholder=\"Nickname\" \n                        spellCheck=\"false\" \n                        onChange={this.handleChange}/><br/>\n                        <label className=\"prompt\">Select task</label><br/>\n                        <button className=\"task\" type=\"button\" onClick={this.setSpy}>spymaster</button><br/>\n                        <button className=\"task\" type=\"button\" onClick={this.setOper}>operator</button>\n\n                    </div>\n                    <div className=\"box-userInfo-right\">\n                        <label className=\"prompt\">Choose a team</label><br/>\n                        <input className=\"red\" type=\"button\" onClick={this.setRed}></input><br/>\n                        {/* <p>{text}</p> */}\n                        <input className=\"blue\" type=\"button\" onClick={this.setBlue}></input><br/>\n                        \n                    </div>\n                    {this.renderRedirect()}\n                    <button className=\"startBtn\" type=\"button\" onClick={this.submitUserInfo}>Start!</button>\n\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default UserInfo"]},"metadata":{},"sourceType":"module"}