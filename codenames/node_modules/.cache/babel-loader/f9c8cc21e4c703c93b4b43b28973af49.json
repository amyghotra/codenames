{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/micha/Codenames/codenames/codenames/src/Components/UserInfo/UserInfo.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Redirect } from 'react-router-dom';\nimport './UserInfo.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UserInfo extends Component {\n  constructor() {\n    super();\n\n    this.componentDidMount = () => {\n      //for when the user is joining a room that already exist   \n      this.setState({\n        room_key: this.props.location.state.room_key,\n        roomid: this.props.location.state.roomid\n      }); //set all the existing games to state\n\n      axios.get('http://127.0.0.1:8000/codenames/games').then(res => {\n        this.setState({\n          gamesData: res.data\n        });\n        this.renderGameId(this.props.location.state.roomid);\n      });\n    };\n\n    this.renderGameId = roomid => {\n      let roomidexist = false;\n      axios.get('http://127.0.0.1:8000/codenames/games').then(res => {\n        for (let i = 0; i < res.data.length; i++) {\n          if (res.data[i].connected_room_key === roomid) {\n            roomidexist = true;\n            this.setState({\n              gameid: res.data[i].game_id,\n              gameWords: res.data[i].gameWords\n            });\n            this.renderTeamId(res.data[i].game_id);\n          }\n        }\n\n        if (roomidexist === false) {\n          axios.post('http://127.0.0.1:8000/codenames/games', {\n            connected_room_key: roomid\n          }).then(res => {\n            console.log('this is the game data: ', res.data);\n            this.setState({\n              gameid: res.data.game_id,\n              gameData: res.data,\n              gameWords: res.data.gameWords,\n              connected_room_key: res.data.connected_room_key\n            });\n            console.log('WE JUST MADE THIS GAME ID: ', res.data.game_id);\n            this.renderTeamId(res.data.game_id);\n          });\n        }\n\n        axios.get('http://127.0.0.1:8000/codenames/players').then(response => {\n          for (let i = 0; i < response.data.length; i++) {\n            if (response.data[i].game_id === this.state.gameid) {\n              console.log(response.data[i]);\n            }\n          }\n        });\n      });\n    };\n\n    this.renderTeamId = gameid => {\n      // console.log('double checking ', gameid);\n      axios.get('http://127.0.0.1:8000/codenames/redTeam').then(res => {\n        for (let i = 0; i < res.data.length; i++) {\n          if (res.data[i].game_id === gameid) {\n            // console.log(res.data[i].game_id, ' COMPARED TO ', gameid)\n            this.setState({\n              redteamid: res.data[i].red_team_id,\n              redTeamExist: true\n            });\n          }\n        }\n      });\n      axios.get('http://127.0.0.1:8000/codenames/blueTeam').then(res => {\n        for (let i = 0; i < res.data.length; i++) {\n          if (res.data[i].game_id === gameid) {\n            this.setState({\n              blueteamid: res.data[i].blue_team_id,\n              blueTeamExist: true\n            });\n          }\n        }\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.setRed = () => {\n      this.setState({\n        team: 'R'\n      });\n    };\n\n    this.setBlue = () => {\n      this.setState({\n        team: 'B'\n      });\n    };\n\n    this.submitUserInfo = () => {\n      if (this.state.room_key !== null && this.state.nickname !== null && this.state.team !== null && this.state.task !== null) {\n        axios.post('http://127.0.0.1:8000/codenames/userInfo', {\n          connected_room_key: this.props.location.state.room_key,\n          nickname: this.state.nickname,\n          team: this.state.team,\n          task: this.state.task\n        }).then(response => {\n          this.setState({\n            playerid: response.data.id\n          });\n          this.createGame();\n        }).catch(error => {\n          console.log(error);\n        });\n      }\n    };\n\n    this.createGame = async () => {\n      if (this.state.redTeamExist === false) {\n        await axios.post('http://127.0.0.1:8000/codenames/redTeam', {\n          game_id: this.state.gameid,\n          connected_room_key: this.state.roomid\n        }).then(response => {\n          this.setState({\n            redteamid: response.data.red_team_id\n          });\n        }).catch(error => {\n          console.log(error);\n        });\n      }\n\n      if (this.state.blueTeamExist === false) {\n        await axios.post('http://127.0.0.1:8000/codenames/blueTeam', {\n          game_id: this.state.gameid,\n          connected_room_key: this.state.roomid\n        }).then(response => {\n          this.setState({\n            blueteamid: response.data.blue_team_id\n          });\n        }).catch(error => {\n          console.log(error);\n        });\n      }\n\n      this.setState({\n        redirect: true\n      });\n    };\n\n    this.renderRedirect = () => {\n      if (this.state.redirect) {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: {\n            pathname: '/game',\n            state: {\n              room_key: this.state.room_key,\n              roomid: this.state.roomid,\n              nickname: this.state.nickname,\n              team: this.state.team,\n              task: this.state.task,\n              gameid: this.state.gameid,\n              gameData: this.state.gameData,\n              gameWords: this.state.gameWords,\n              playerid: this.state.playerid,\n              redteamid: this.state.redteamid,\n              blueteamid: this.state.blueteamid\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 20\n        }, this);\n      }\n    };\n\n    this.setSpy = () => {\n      this.setState({\n        task: 'S'\n      });\n    };\n\n    this.setOper = () => {\n      this.setState({\n        task: 'O'\n      });\n    };\n\n    this.state = {\n      room_key: '',\n      roomid: '',\n      nickname: '',\n      playerid: '',\n      team: '',\n      redteamid: '',\n      blueteamid: '',\n      task: '',\n      redirect: false,\n      gameData: '',\n      gameWords: '',\n      gameid: 0,\n      connected_room_key: '',\n      redTeamExist: false,\n      blueTeamExist: false,\n      redTeam\n    };\n  }\n\n  render() {\n    // const text = this.state.blue_team ? \"blue team\" : \"red Team\"\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userInfo\",\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"gameCode\",\n        children: [\" Game Code: \", this.state.room_key, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box-userInfo-left\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"prompt\",\n            children: \"Enter nickname\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 73\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 78\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"nickname\",\n            value: this.state.nickname,\n            name: \"nickname\",\n            type: \"text\",\n            placeholder: \"Nickname\",\n            spellCheck: \"false\",\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 55\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"prompt\",\n            children: \"Select task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 70\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"task\",\n            type: \"button\",\n            onClick: this.setSpy,\n            children: \"spymaster\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 104\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"task\",\n            type: \"button\",\n            onClick: this.setOper,\n            children: \"operator\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box-userInfo-right\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"prompt\",\n            children: \"Choose a team\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 72\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"red\",\n            type: \"button\",\n            onClick: this.setRed\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 92\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"blue\",\n            type: \"button\",\n            onClick: this.setBlue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 94\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 21\n        }, this), this.renderRedirect(), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"startBtn\",\n          type: \"button\",\n          onClick: this.submitUserInfo,\n          children: \"Start!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default UserInfo;","map":{"version":3,"sources":["/mnt/c/Users/micha/Codenames/codenames/codenames/src/Components/UserInfo/UserInfo.js"],"names":["React","Component","axios","Redirect","UserInfo","constructor","componentDidMount","setState","room_key","props","location","state","roomid","get","then","res","gamesData","data","renderGameId","roomidexist","i","length","connected_room_key","gameid","game_id","gameWords","renderTeamId","post","console","log","gameData","response","redteamid","red_team_id","redTeamExist","blueteamid","blue_team_id","blueTeamExist","handleChange","event","target","name","value","setRed","team","setBlue","submitUserInfo","nickname","task","playerid","id","createGame","catch","error","redirect","renderRedirect","pathname","setSpy","setOper","redTeam","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios'\nimport {Redirect} from 'react-router-dom'\nimport './UserInfo.css'\n\n\nclass UserInfo extends Component {\n    constructor() {\n        super()\n        this.state = {\n            room_key: '',\n            roomid: '',\n            nickname: '',\n            playerid: '',\n            team: '',\n            redteamid: '',\n            blueteamid: '',\n            task: '',\n            redirect: false,\n            gameData: '',\n            gameWords: '',\n            gameid: 0,\n            connected_room_key: '',\n            redTeamExist: false,\n            blueTeamExist: false,\n\n            redTeam\n        }\n    }\n\n    componentDidMount = () => {\n        //for when the user is joining a room that already exist   \n        this.setState({\n            room_key: this.props.location.state.room_key,\n            roomid: this.props.location.state.roomid\n        })\n\n        //set all the existing games to state\n        axios.get('http://127.0.0.1:8000/codenames/games').then(res => {\n            this.setState({\n                gamesData: res.data\n            })\n            this.renderGameId(this.props.location.state.roomid)\n        })\n\n    }\n\n    //make the game as long as the roomid exist and if there isnt a game that matches the roomid already\n    renderGameId = (roomid) => {\n\n        let roomidexist = false;\n\n        axios.get('http://127.0.0.1:8000/codenames/games').then(res => {\n            for(let i = 0; i < res.data.length; i++) {\n                if(res.data[i].connected_room_key === roomid) {\n                    roomidexist = true;\n                    this.setState({\n                        gameid: res.data[i].game_id,\n                        gameWords: res.data[i].gameWords\n                    })\n                    this.renderTeamId(res.data[i].game_id)\n                }\n            }\n            if(roomidexist === false) {\n                axios.post('http://127.0.0.1:8000/codenames/games', {\n                    connected_room_key: roomid\n                }).then(res => {\n                    console.log('this is the game data: ', res.data);\n                    this.setState({\n                        gameid: res.data.game_id,\n                        gameData: res.data,\n                        gameWords: res.data.gameWords,\n                        connected_room_key: res.data.connected_room_key\n                    })\n                    console.log('WE JUST MADE THIS GAME ID: ', res.data.game_id);\n                    this.renderTeamId(res.data.game_id)\n                })\n            }\n            axios.get('http://127.0.0.1:8000/codenames/players').then(response => {\n                for(let i = 0; i < response.data.length; i++) {\n                    if(response.data[i].game_id === this.state.gameid) {\n                        console.log(response.data[i]);\n                    }\n                }\n            })\n        })\n\n    }\n\n    renderTeamId = (gameid) => {\n        // console.log('double checking ', gameid);\n\n        axios.get('http://127.0.0.1:8000/codenames/redTeam').then(res => {\n            for(let i = 0; i < res.data.length; i++) {\n                if(res.data[i].game_id === gameid) {\n                    // console.log(res.data[i].game_id, ' COMPARED TO ', gameid)\n                    this.setState({\n                        redteamid: res.data[i].red_team_id,\n                        redTeamExist: true,\n                        \n                    })\n                }\n            }\n        })\n\n        axios.get('http://127.0.0.1:8000/codenames/blueTeam').then(res => {\n            for(let i = 0; i < res.data.length; i++) {\n                if(res.data[i].game_id === gameid) {\n                    this.setState({\n                        blueteamid: res.data[i].blue_team_id,\n                        blueTeamExist: true,\n                        \n                    })\n                }\n            }\n        })\n    }\n\n    handleChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    setRed = () => {\n        this.setState({\n            team: 'R'\n        })\n    }\n\n    setBlue = () => {\n        this.setState({\n            team: 'B'\n        })\n    }\n\n   \n    submitUserInfo = () => {        \n        if(this.state.room_key !== null && this.state.nickname !== null && this.state.team !== null && this.state.task !== null) {\n            axios.post('http://127.0.0.1:8000/codenames/userInfo', {\n                connected_room_key:this.props.location.state.room_key,\n                nickname: this.state.nickname, \n                team: this.state.team,\n                task: this.state.task\n            })\n            .then(response => {\n                this.setState({\n                    playerid: response.data.id\n                })\n                this.createGame()\n            })\n            .catch(error => {\n                console.log(error)\n            })\n        }\n\n\n    }\n\n\n    createGame = async () => {\n        if (this.state.redTeamExist === false) {\n\n            await axios.post('http://127.0.0.1:8000/codenames/redTeam', {\n                game_id: this.state.gameid,\n                connected_room_key: this.state.roomid\n            }).then(response => {\n                this.setState({\n                    redteamid: response.data.red_team_id\n                })\n                \n            })\n            .catch(error => {\n                console.log(error)\n            }) \n        }\n        if (this.state.blueTeamExist === false) {\n            await axios.post('http://127.0.0.1:8000/codenames/blueTeam', {\n                game_id: this.state.gameid,\n                connected_room_key: this.state.roomid\n            }).then(response => {\n                this.setState({\n                    blueteamid: response.data.blue_team_id\n                })\n                \n            })\n            .catch(error => {\n                console.log(error)\n            })\n        }\n\n        this.setState({\n            redirect: true\n        })\n    }\n\n    renderRedirect = () => {\n        if(this.state.redirect){\n            return <Redirect to={{\n                pathname: '/game',\n                state: {\n                    room_key: this.state.room_key,\n                    roomid: this.state.roomid,\n                    nickname: this.state.nickname,\n                    team: this.state.team,\n                    task: this.state.task,\n                    gameid: this.state.gameid,\n                    gameData: this.state.gameData,\n                    gameWords: this.state.gameWords,\n                    playerid: this.state.playerid,\n                    redteamid: this.state.redteamid,\n                    blueteamid: this.state.blueteamid\n                    \n                }\n            }}/>\n        }\n    }\n\n    setSpy = () => {\n        this.setState({\n            task: 'S'\n        })\n    }\n\n    setOper = () => {\n        this.setState({\n            task: 'O'\n        })\n    }\n\n    \n    render() {\n        \n        // const text = this.state.blue_team ? \"blue team\" : \"red Team\"\n        return(\n            <div className=\"userInfo\">\n                <br />\n                <h6 className=\"gameCode\"> Game Code: {this.state.room_key} </h6>\n                <form className=\"container\">\n                    <div className=\"box-userInfo-left\">\n                        <label className=\"prompt\">Enter nickname</label><br/><br/>\n                        <input \n                        className=\"nickname\" \n                        value={this.state.nickname}\n                        name= \"nickname\"\n                        type=\"text\" \n                        placeholder=\"Nickname\" \n                        spellCheck=\"false\" \n                        onChange={this.handleChange}/><br/>\n                        <label className=\"prompt\">Select task</label><br/>\n                        <button className=\"task\" type=\"button\" onClick={this.setSpy}>spymaster</button><br/>\n                        <button className=\"task\" type=\"button\" onClick={this.setOper}>operator</button>\n\n                    </div>\n                    <div className=\"box-userInfo-right\">\n                        <label className=\"prompt\">Choose a team</label><br/>\n                        <input className=\"red\" type=\"button\" onClick={this.setRed}></input><br/>\n                        {/* <p>{text}</p> */}\n                        <input className=\"blue\" type=\"button\" onClick={this.setBlue}></input><br/>\n                        \n                    </div>\n                    {this.renderRedirect()}\n                    <button className=\"startBtn\" type=\"button\" onClick={this.submitUserInfo}>Start!</button>\n\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default UserInfo"]},"metadata":{},"sourceType":"module"}